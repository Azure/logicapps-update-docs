{"version":3,"sources":["components/DatePicker/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,oEAAkG;AAElG,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,yBAAyB;IAEjD,wBAAwB,EAAE,sBAAsB;CACjD,CAAC;AAOF;IAA4C,0CAAkD;IAC5F;QAAA,YACE,iBAAO,SAMR;QAJC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,sBAAS,CAAC,MAAM;YAChC,KAAK,EAAE,IAAI;SACZ,CAAC;;IACJ,CAAC;IAEM,uCAAM,GAAb;QAAA,iBAmBC;QAlBK,IAAA,eAAsC,EAApC,kCAAc,EAAE,gBAAK,CAAgB;QAC3C,IAAM,IAAI,GAAG,uFAAuF,CAAC;QACrG,MAAM,CAAC,CACL;YACE,0NAA+L;YAC/L,oBAAC,uBAAU,IACT,KAAK,EAAC,YAAY,EAClB,UAAU,EAAG,KAAK,EAClB,cAAc,EAAG,IAAI,EACrB,SAAS,EAAG,IAAI,EAChB,cAAc,EAAG,cAAc,EAC/B,OAAO,EAAG,gBAAgB,EAC1B,KAAK,EAAG,KAAK,EACb,YAAY,EAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAA8B,GACrD;YACF,oBAAC,sBAAa,IAAC,OAAO,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAA8B,EAAG,IAAI,EAAC,OAAO,GAAG,CAC3E,CACP,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CA9BA,AA8BC,CA9B2C,KAAK,CAAC,SAAS,GA8B1D;AA9BY,wDAAsB","file":"components/DatePicker/examples/DatePicker.Input.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\r\n\r\nconst DayPickerStrings: IDatePickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year',\r\n\r\n  isRequiredErrorMessage: 'Start date is required.',\r\n\r\n  invalidInputErrorMessage: 'Invalid date format.'\r\n};\r\n\r\nexport interface IDatePickerInputExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n  value?: Date;\r\n}\r\n\r\nexport class DatePickerInputExample extends React.Component<any, IDatePickerInputExampleState> {\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday,\r\n      value: null\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { firstDayOfWeek, value } = this.state;\r\n    const desc = 'This field is required. One of the support input formats is year dash month dash day.';\r\n    return (\r\n      <div>\r\n        <p>Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField again will dismiss the DatePicker and allow text input.</p>\r\n        <DatePicker\r\n          label='Start date'\r\n          isRequired={ false }\r\n          allowTextInput={ true }\r\n          ariaLabel={ desc }\r\n          firstDayOfWeek={ firstDayOfWeek }\r\n          strings={ DayPickerStrings }\r\n          value={ value }\r\n          onSelectDate={ date => this.setState({ value: date }) }\r\n        />\r\n        <DefaultButton onClick={ () => this.setState({ value: null }) } text='Clear' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}