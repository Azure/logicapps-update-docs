{"version":3,"sources":["components/Button/Button.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,uCAAuC;AACvC,6BAA+B;AAC/B,sCAAsC;AAEtC,6CAAsD;AACtD,+CAA0D;AAC1D,+DAA8D;AAC9D,+DAA8D;AAC9D,kEAAiE;AACjE,sDAAqD;AACrD,+DAA8D;AAC9D;;;GAGG;AACH;IAA4B,0BAA+B;IAMzD,gBAAY,KAAmB;QAA/B,YACE,kBAAM,KAAK,CAAC,SAMb;QAZD;;WAEG;QACO,+BAAyB,GAAG,KAAK,CAAC;QAK1C,gBAAI,CACF,2EAA2E;YAC3E,iEAAiE,CAClE,CAAC;;IACJ,CAAC;IAEM,uBAAM,GAAb;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,MAAM,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,KAAK,yBAAU,CAAC,OAAO;gBACrB,MAAM,CAAC,oBAAC,6BAAa,eAAM,KAAK,EAAK,CAAC;YAExC,KAAK,yBAAU,CAAC,QAAQ;gBACtB,MAAM,CAAC,oBAAC,+BAAc,eAAM,KAAK,EAAK,CAAC;YAEzC,KAAK,yBAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,oBAAC,uBAAU,eAAM,KAAK,EAAK,CAAC;YAErC,KAAK,yBAAU,CAAC,OAAO;gBACrB,MAAM,CAAC,oBAAC,6BAAa,eAAM,KAAK,EAAK,CAAC;YAExC;gBACE,MAAM,CAAC,oBAAC,6BAAa,eAAM,KAAK,EAAK,CAAC;QAC1C,CAAC;IACH,CAAC;IACH,aAAC;AAAD,CAnCA,AAmCC,CAnC2B,yBAAa,GAmCxC;AAnCY,wBAAM","file":"components/Button/Button.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport { BaseComponent, warn } from '../../Utilities';\r\nimport { ButtonType, IButtonProps } from './Button.Props';\r\nimport { DefaultButton } from './DefaultButton/DefaultButton';\r\nimport { CommandButton } from './CommandButton/CommandButton';\r\nimport { CompoundButton } from './CompoundButton/CompoundButton';\r\nimport { IconButton } from './IconButton/IconButton';\r\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\r\n/**\r\n * This class is deprecated. Use the individual *Button components instead.\r\n * @deprecated\r\n */\r\nexport class Button extends BaseComponent<IButtonProps, {}> {\r\n  /**\r\n   * Set this BaseComponent._resolveComponentRef to false, bypassing resolution of componentRef.\r\n   */\r\n  protected _shouldUpdateComponentRef = false;\r\n\r\n  constructor(props: IButtonProps) {\r\n    super(props);\r\n\r\n    warn(\r\n      `The Button component has been deprecated. Use specific variants instead. ` +\r\n      `(PrimaryButton, DefaultButton, IconButton, CommandButton, etc.)`\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const props = this.props;\r\n\r\n    switch (props.buttonType) {\r\n      case ButtonType.command:\r\n        return <CommandButton { ...props } />;\r\n\r\n      case ButtonType.compound:\r\n        return <CompoundButton { ...props } />;\r\n\r\n      case ButtonType.icon:\r\n        return <IconButton { ...props } />;\r\n\r\n      case ButtonType.primary:\r\n        return <PrimaryButton { ...props } />;\r\n\r\n      default:\r\n        return <DefaultButton { ...props } />;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}