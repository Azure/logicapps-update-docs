{"version":3,"sources":["components/Pivot/Pivot.tsx"],"names":[],"mappings":"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","file":"components/Pivot/Pivot.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  getId,\r\n  autobind\r\n} from '../../Utilities';\r\nimport { CommandButton } from '../../Button';\r\nimport { IPivotProps } from './Pivot.Props';\r\nimport { IPivotItemProps } from './PivotItem.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { PivotItem } from './PivotItem';\r\nimport { PivotLinkFormat } from './Pivot.Props';\r\nimport { PivotLinkSize } from './Pivot.Props';\r\nimport * as stylesImport from './Pivot.scss';\r\nconst styles: any = stylesImport;\r\n\r\n/**\r\n *  Usage:\r\n *\r\n *   <Pivot>\r\n *     <PivotItem linkText=\"Foo\">\r\n *       <Label>Pivot #1</Label>\r\n *     </PivotItem>\r\n *     <PivotItem linkText=\"Bar\">\r\n *       <Label>Pivot #2</Label>\r\n *     </PivotItem>\r\n *     <PivotItem linkText=\"Bas\">\r\n *       <Label>Pivot #3</Label>\r\n *     </PivotItem>\r\n *   </Pivot>\r\n */\r\n\r\nexport interface IPivotState {\r\n  links: IPivotItemProps[];\r\n  selectedKey: string;\r\n  selectedTabId: string;\r\n}\r\n\r\nexport class Pivot extends BaseComponent<IPivotProps, IPivotState> {\r\n  private _keyToIndexMapping: { [key: string]: number };\r\n  private _keyToTabIds: { [key: string]: string };\r\n  private _pivotId: string;\r\n\r\n  constructor(props: IPivotProps) {\r\n    super(props);\r\n    this._pivotId = getId('Pivot');\r\n    const links: IPivotItemProps[] = this._getPivotLinks(this.props);\r\n    let selectedKey: string;\r\n\r\n    if (props.initialSelectedKey) {\r\n      selectedKey = props.initialSelectedKey;\r\n    } else if (props.initialSelectedIndex) {\r\n      selectedKey = links[props.initialSelectedIndex].itemKey;\r\n    } else if (props.selectedKey) {\r\n      selectedKey = props.selectedKey;\r\n    } else if (links.length) {\r\n      selectedKey = links[0].itemKey;\r\n    }\r\n\r\n    this.state = {\r\n      links,\r\n      selectedKey,\r\n      selectedTabId: this._keyToTabIds[selectedKey],\r\n    } as IPivotState;\r\n\r\n    this._renderLink = this._renderLink.bind(this);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IPivotProps) {\r\n    const links: IPivotItemProps[] = this._getPivotLinks(nextProps);\r\n\r\n    this.setState((prevState, props) => {\r\n      let selectedKey: string;\r\n      if (this._isKeyValid(nextProps.selectedKey)) {\r\n        selectedKey = nextProps.selectedKey;\r\n      } else if (this._isKeyValid(prevState.selectedKey)) {\r\n        selectedKey = prevState.selectedKey;\r\n      } else if (links.length) {\r\n        selectedKey = links[0].itemKey;\r\n      }\r\n\r\n      return {\r\n        links: links,\r\n        selectedKey,\r\n        selectedTabId: this._keyToTabIds[selectedKey],\r\n      } as IPivotState;\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        { this._renderPivotLinks() }\r\n        { this._renderPivotItem() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the set of links to route between pivots\r\n   */\r\n  private _renderPivotLinks() {\r\n    return (\r\n      <FocusZone direction={ FocusZoneDirection.horizontal }>\r\n        <ul className={ css('ms-Pivot', styles.root,\r\n          { ['ms-Pivot--large ' + styles.rootIsLarge]: this.props.linkSize === PivotLinkSize.large },\r\n          { ['ms-Pivot--tabs ' + styles.rootIsTabs]: this.props.linkFormat === PivotLinkFormat.tabs }) }\r\n          role='tablist'>\r\n          { this.state.links.map(this._renderLink) }\r\n        </ul>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders a pivot link\r\n   */\r\n  @autobind\r\n  private _renderLink(link: IPivotItemProps) {\r\n    const { itemKey } = link;\r\n    const tabId = this._keyToTabIds[itemKey];\r\n    const { onRenderItemLink } = link;\r\n    let linkContent: JSX.Element | false;\r\n\r\n    if (onRenderItemLink) {\r\n      linkContent = onRenderItemLink(link, this._renderLinkContent);\r\n    } else {\r\n      linkContent = this._renderLinkContent(link);\r\n    }\r\n\r\n    return (\r\n      <CommandButton\r\n        id={ tabId }\r\n        key={ itemKey }\r\n        className={ css(\r\n          'ms-Pivot-link',\r\n          styles.link,\r\n          {\r\n            ['is-selected ' + styles.linkIsSelected]: this.state.selectedKey === itemKey\r\n          }\r\n        ) }\r\n        onClick={ this._onLinkClick.bind(this, itemKey) }\r\n        onKeyPress={ this._onKeyPress.bind(this, itemKey) }\r\n        ariaLabel={ link.ariaLabel }\r\n        role='tab'\r\n        aria-selected={ this.state.selectedKey === itemKey }>\r\n        { linkContent }\r\n      </CommandButton>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _renderLinkContent(link: IPivotItemProps): JSX.Element {\r\n    const { itemCount, itemIcon, linkText } = link;\r\n\r\n    return <span className={ css('ms-Pivot-link-content') }>\r\n      { itemIcon !== undefined && (\r\n        <span className={ css('ms-Pivot-icon', styles.icon) }>\r\n          <i className={ `ms-Icon ms-Icon--${itemIcon}` }></i>\r\n        </span>\r\n      ) }\r\n      { linkText !== undefined && <span className={ css('ms-Pivot-text', styles.text) }> { link.linkText }</span> }\r\n      { itemCount !== undefined && <span className={ css('ms-Pivot-count', styles.count) } > ({ itemCount })</span> }\r\n    </span>;\r\n  }\r\n\r\n  /**\r\n   * Renders the current Pivot Item\r\n   */\r\n  private _renderPivotItem() {\r\n    if (this.props.headersOnly) {\r\n      return null;\r\n    }\r\n\r\n    const itemKey: string = this.state.selectedKey;\r\n    const index = this._keyToIndexMapping[itemKey];\r\n    let { selectedTabId } = this.state;\r\n\r\n    return (\r\n      <div\r\n        role='tabpanel'\r\n        aria-labelledby={ selectedTabId }>\r\n        { React.Children.toArray(this.props.children)[index] }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\r\n   * The set of Links is determined by child components of type PivotItem\r\n   */\r\n  private _getPivotLinks(props: IPivotProps): IPivotItemProps[] {\r\n    const links: IPivotItemProps[] = [];\r\n    this._keyToIndexMapping = {};\r\n    this._keyToTabIds = {};\r\n\r\n    React.Children.map(props.children, (child: any, index: number) => {\r\n      if (typeof child === 'object' && child.type === PivotItem) {\r\n        const pivotItem = child as PivotItem;\r\n        const itemKey = pivotItem.props.itemKey || index.toString();\r\n\r\n        links.push({\r\n          linkText: pivotItem.props.linkText,\r\n          ariaLabel: pivotItem.props.ariaLabel,\r\n          itemKey: itemKey,\r\n          itemCount: pivotItem.props.itemCount,\r\n          itemIcon: pivotItem.props.itemIcon,\r\n          onRenderItemLink: pivotItem.props.onRenderItemLink\r\n        });\r\n        this._keyToIndexMapping[itemKey] = index;\r\n        this._keyToTabIds[itemKey] = this.getTabId(itemKey, index);\r\n      }\r\n    });\r\n\r\n    return links;\r\n  }\r\n\r\n  /**\r\n   * Generates the Id for the tab button.\r\n   */\r\n  private getTabId(itemKey: string, index: number): string {\r\n    if (this.props.getTabId) {\r\n      return this.props.getTabId(itemKey, index);\r\n    }\r\n\r\n    return this._pivotId + `-Tab${index}`;\r\n  }\r\n\r\n  /**\r\n   * whether the key exists in the pivot items.\r\n   */\r\n  private _isKeyValid(itemKey: string) {\r\n    return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Handles the onClick event on PivotLinks\r\n   */\r\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>) {\r\n    ev.preventDefault();\r\n    this._updateSelectedItem(itemKey, ev);\r\n  }\r\n\r\n  /**\r\n   * Handle the onKeyPress eventon the PivotLinks\r\n   */\r\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>) {\r\n    ev.preventDefault();\r\n    if (ev.which === KeyCodes.enter) {\r\n      this._updateSelectedItem(itemKey);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state with the new selected index\r\n   */\r\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>) {\r\n    this.setState({\r\n      selectedKey: itemKey,\r\n      selectedTabId: this._keyToTabIds[itemKey]\r\n    } as IPivotState);\r\n\r\n    if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {\r\n      const index = this._keyToIndexMapping[itemKey];\r\n\r\n      // React.Element<any> cannot directly convert to PivotItem.\r\n      const item = React.Children.toArray(this.props.children)[index] as any;\r\n\r\n      if (typeof item === 'object' && item.type === PivotItem) {\r\n        this.props.onLinkClick(item as PivotItem, ev);\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}