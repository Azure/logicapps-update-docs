{"version":3,"sources":["components/MessageBar/MessageBar.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,6CAKyB;AACzB,uCAA0C;AAC1C,uDAAsE;AACtE,gDAAkD;AAClD,IAAM,MAAM,GAAQ,YAAY,CAAC;AAOjC;IAAgC,8BAAiD;IAkB/E,oBAAY,KAAuB;QAAnC,YACE,kBAAM,KAAK,CAAC,SAMb;QAjBO,cAAQ;YACd,GAAC,iCAAc,CAAC,IAAI,IAAG,MAAM;YAC7B,GAAC,iCAAc,CAAC,OAAO,IAAG,MAAM;YAChC,GAAC,iCAAc,CAAC,KAAK,IAAG,YAAY;YACpC,GAAC,iCAAc,CAAC,OAAO,IAAG,SAAS;YACnC,GAAC,iCAAc,CAAC,MAAM,IAAG,SAAS;YAClC,GAAC,iCAAc,CAAC,aAAa,IAAG,SAAS;YACzC,GAAC,iCAAc,CAAC,OAAO,IAAG,WAAW;gBACrC;QAKA,KAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE,iBAAK,CAAC,YAAY,CAAC;YAC5B,WAAW,EAAE,KAAK;SACnB,CAAC;;;IACJ,CAAC;IAEM,2BAAM,GAAb;QACQ,IAAA,oCAAW,CAAgB;QAEjC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1E,CAAC;IAEO,mCAAc,GAAtB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,6BAAK,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,WAAW;oBAC5C,CAAC,wBAAwB,GAAG,MAAM,CAAC,OAAO,CAAC;oBAC3C,CAAC,+BAA+B,GAAG,MAAM,CAAC,cAAc,CAAC,IACvD,IAAI,CAAC,KAAK,CAAC,OAAO,CAChB,CAAC;QACT,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEO,kCAAa,GAArB;QACE,MAAM,CAAC,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,eAAe,EAAE,MAAM,CAAC,IAAI;YAC3D,GAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,IAAI;YACnF,GAAC,uBAAuB,GAAG,MAAM,CAAC,WAAW,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,KAAK;YAClG,GAAC,yBAAyB,GAAG,MAAM,CAAC,aAAa,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,OAAO,CAAC;gBAC1G,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,MAAM,CAAC;YACrD,GAAC,+BAA+B,GAAG,MAAM,CAAC,mBAAmB,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,aAAa;YAC1H,GAAC,yBAAyB,GAAG,MAAM,CAAC,aAAa,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,OAAO;YACxG,GAAC,yBAAyB,GAAG,MAAM,CAAC,aAAa,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,iCAAc,CAAC,OAAO;gBACxG,CAAC;;IACL,CAAC;IAEO,mCAAc,GAAtB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,CACL,oBAAC,mBAAU,IACT,QAAQ,EAAG,KAAK,EAChB,SAAS,EAAG,eAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,SAAS,CAAC,EAC5D,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAC9B,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAClC,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAC7C,CACH,CAAC;QACJ,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEO,iCAAY,GAApB;QACE,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,IAAI,CAAC;YACrD,2BAAG,SAAS,EAAG,sBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAG,GAAO,CAChF,CACP,CAAC;IACJ,CAAC;IAEO,2CAAsB,GAA9B;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO;YAC/C,iCAAiC,GAAG,MAAM,CAAC,gBAAgB,GAAG,0BAA0B,GAAG,MAAM,CAAC,SAAS,CAAC;IAChH,CAAC;IAEO,qCAAgB,GAAxB;QACE,MAAM,CAAC,CACL,6BACE,SAAS,EAAG,IAAI,CAAC,aAAa,EAAE,GAAG,2BAA2B,GAAG,MAAM,CAAC,SAAS,EACjF,IAAI,EAAC,QAAQ,eACD,IAAI,CAAC,wBAAwB,EAAE;YAC3C,6BAAK,SAAS,EAAG,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,OAAO,CAAC;gBACzD,IAAI,CAAC,YAAY,EAAE;gBACrB,6BAAK,SAAS,EAAG,eAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,WAAW,CAAC;oBACjE,IAAI,CAAC,gBAAgB,EAAE;oBACvB,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,cAAc,EAAE,CACnB,CACF,CACF,CACP,CAAC;IACJ,CAAC;IAEO,sCAAiB,GAAzB;QACE,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,IAAI,CAAC,aAAa,EAAE,GAAG,4BAA4B,GAAG,MAAM,CAAC,UAAU;YACtF,6BAAK,SAAS,EAAG,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,OAAO,CAAC;gBACzD,IAAI,CAAC,YAAY,EAAE;gBACrB,6BAAK,SAAS,EAAG,eAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,WAAW,CAAC,IACjE,IAAI,CAAC,gBAAgB,EAAE,CACrB;gBACJ,IAAI,CAAC,cAAc,EAAE;gBACvB,6BAAK,SAAS,EAAG,eAAG,CAAC,gCAAgC,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAC3E,IAAI,CAAC,cAAc,EAAE,CACnB,CACF,CACD,CACR,CAAC;IACJ,CAAC;IAEO,qCAAgB,GAAxB;QACE,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO;YAC/E,8BAAM,SAAS,EAAG,IAAI,CAAC,sBAAsB,EAAE,EAAG,IAAI,EAAC,QAAQ,eAAa,IAAI,CAAC,wBAAwB,EAAE;gBACzG,oBAAC,yBAAa;oBACZ,kCAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAS,CACtB,CACX,CACH,CACP,CAAC;IACJ,CAAC;IAEO,6CAAwB,GAAhC;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;YAClC,KAAK,iCAAc,CAAC,OAAO,CAAC;YAC5B,KAAK,iCAAc,CAAC,KAAK,CAAC;YAC1B,KAAK,iCAAc,CAAC,aAAa;gBAC/B,MAAM,CAAC,WAAW,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACH,iBAAC;AAAD,CA5IA,AA4IC,CA5I+B,yBAAa;AAE7B,uBAAY,GAAqB;IAC7C,cAAc,EAAE,iCAAc,CAAC,IAAI;IACnC,SAAS,EAAE,IAAI;IACf,WAAW,EAAE,IAAI;CAClB,CAAC;AANS,gCAAU","file":"components/MessageBar/MessageBar.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  DelayedRender,\r\n  css,\r\n  getId\r\n} from '../../Utilities';\r\nimport { IconButton } from '../../Button';\r\nimport { IMessageBarProps, MessageBarType } from './MessageBar.Props';\r\nimport * as stylesImport from './MessageBar.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IMessageBarState {\r\n  labelId?: string;\r\n  showContent?: boolean;\r\n}\r\n\r\nexport class MessageBar extends BaseComponent<IMessageBarProps, IMessageBarState> {\r\n\r\n  public static defaultProps: IMessageBarProps = {\r\n    messageBarType: MessageBarType.info,\r\n    onDismiss: null,\r\n    isMultiline: true,\r\n  };\r\n\r\n  private ICON_MAP = {\r\n    [MessageBarType.info]: 'Info',\r\n    [MessageBarType.warning]: 'Info',\r\n    [MessageBarType.error]: 'ErrorBadge',\r\n    [MessageBarType.blocked]: 'Blocked',\r\n    [MessageBarType.remove]: 'Blocked', // TODO remove deprecated value at >= 1.0.0\r\n    [MessageBarType.severeWarning]: 'Warning',\r\n    [MessageBarType.success]: 'Completed'\r\n  };\r\n\r\n  constructor(props: IMessageBarProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      labelId: getId('MessageBar'),\r\n      showContent: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let { isMultiline } = this.props;\r\n\r\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\r\n  }\r\n\r\n  private _getActionsDiv(): JSX.Element {\r\n    if (this.props.actions) {\r\n      return <div className={ this.props.isMultiline ?\r\n        ('ms-MessageBar-actions ' + styles.actions) :\r\n        ('ms-MessageBar-actionsOneline ' + styles.actionsOneline) }>\r\n        { this.props.actions }\r\n      </div>;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private _getClassName(): string {\r\n    return css(this.props.className, 'ms-MessageBar', styles.root, {\r\n      ['ms-MessageBar ' + styles.root]: this.props.messageBarType === MessageBarType.info,\r\n      ['ms-MessageBar--error ' + styles.rootIsError]: this.props.messageBarType === MessageBarType.error,\r\n      ['ms-MessageBar--blocked ' + styles.rootIsBlocked]: (this.props.messageBarType === MessageBarType.blocked) ||\r\n      (this.props.messageBarType === MessageBarType.remove), // TODO remove deprecated value at >= 1.0.0\r\n      ['ms-MessageBar--severeWarning ' + styles.rootIsSevereWarning]: this.props.messageBarType === MessageBarType.severeWarning,\r\n      ['ms-MessageBar--success ' + styles.rootIsSuccess]: this.props.messageBarType === MessageBarType.success,\r\n      ['ms-MessageBar--warning ' + styles.rootIsWarning]: this.props.messageBarType === MessageBarType.warning\r\n    });\r\n  }\r\n\r\n  private _getDismissDiv(): JSX.Element {\r\n    if (this.props.onDismiss != null) {\r\n      return (\r\n        <IconButton\r\n          disabled={ false }\r\n          className={ css('ms-MessageBar-dismissal', styles.dismissal) }\r\n          onClick={ this.props.onDismiss }\r\n          iconProps={ { iconName: 'Cancel' } }\r\n          ariaLabel={ this.props.dismissButtonAriaLabel }\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private _getIconSpan(): JSX.Element {\r\n    return (\r\n      <div className={ css('ms-MessageBar-icon', styles.icon) }>\r\n        <i className={ `ms-Icon ms-Icon--${this.ICON_MAP[this.props.messageBarType]}` }></i>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getInnerTextClassName(): string {\r\n    return this.props.onDismiss || this.props.actions ?\r\n      'ms-MessageBar-innerTextPadding ' + styles.innerTextPadding : 'ms-MessageBar-innerText ' + styles.innerText;\r\n  }\r\n\r\n  private _renderMultiLine(): React.ReactElement<React.HTMLProps<HTMLAreaElement>> {\r\n    return (\r\n      <div\r\n        className={ this._getClassName() + ' ms-MessageBar-multiline ' + styles.multiline }\r\n        role='status'\r\n        aria-live={ this._getAnnouncementPriority() }>\r\n        <div className={ css('ms-MessageBar-content', styles.content) }>\r\n          { this._getIconSpan() }\r\n          <div className={ css('ms-MessageBar-actionables', styles.actionables) }>\r\n            { this._renderInnerText() }\r\n            { this._getActionsDiv() }\r\n            { this._getDismissDiv() }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderSingleLine(): React.ReactElement<React.HTMLProps<HTMLAreaElement>> {\r\n    return (\r\n      <div className={ this._getClassName() + ' ms-MessageBar-singleline ' + styles.singleline }>\r\n        <div className={ css('ms-MessageBar-content', styles.content) }>\r\n          { this._getIconSpan() }\r\n          <div className={ css('ms-MessageBar-actionables', styles.actionables) }>\r\n            { this._renderInnerText() }\r\n          </div>\r\n          { this._getActionsDiv() }\r\n          <div className={ css('ms-MessageBar-dismissalOneline', styles.dismissalOneline) }>\r\n            { this._getDismissDiv() }\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  private _renderInnerText(): JSX.Element {\r\n    return (\r\n      <div className={ css('ms-MessageBar-text', styles.text) } id={ this.state.labelId }>\r\n        <span className={ this._getInnerTextClassName() } role='status' aria-live={ this._getAnnouncementPriority() }>\r\n          <DelayedRender>\r\n            <span>{ this.props.children }</span>\r\n          </DelayedRender>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getAnnouncementPriority(): string {\r\n    switch (this.props.messageBarType) {\r\n      case MessageBarType.blocked:\r\n      case MessageBarType.error:\r\n      case MessageBarType.severeWarning:\r\n        return 'assertive';\r\n    }\r\n    return 'polite';\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}