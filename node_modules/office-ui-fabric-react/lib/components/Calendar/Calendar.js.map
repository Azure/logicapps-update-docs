{"version":3,"sources":["components/Calendar/Calendar.tsx"],"names":[],"mappings":"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","file":"components/Calendar/Calendar.js","sourcesContent":["import * as React from 'react';\r\nimport { ICalendar, ICalendarProps } from './Calendar.Props';\r\nimport { DayOfWeek, DateRangeType } from '../../utilities/dateValues/DateValues';\r\nimport { CalendarDay } from './CalendarDay';\r\nimport { CalendarMonth } from './CalendarMonth';\r\nimport { compareDates } from '../../utilities/dateMath/DateMath';\r\nimport {\r\n  autobind,\r\n  css,\r\n  BaseComponent,\r\n  KeyCodes\r\n} from '../../Utilities';\r\nimport * as stylesImport from './Calendar.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface ICalendarState {\r\n  /** The currently focused date in the calendar, but not necessarily selected */\r\n  navigatedDate?: Date;\r\n\r\n  /** The currently selected date in the calendar */\r\n  selectedDate?: Date;\r\n}\r\n\r\nexport class Calendar extends BaseComponent<ICalendarProps, ICalendarState> implements ICalendar {\r\n  public static defaultProps: ICalendarProps = {\r\n    onSelectDate: null,\r\n    onDismiss: null,\r\n    isMonthPickerVisible: true,\r\n    value: null,\r\n    firstDayOfWeek: DayOfWeek.Sunday,\r\n    dateRangeType: DateRangeType.Day,\r\n    autoNavigateOnSelection: false,\r\n    showGoToToday: true,\r\n    strings: null\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: HTMLElement;\r\n    dayPicker: CalendarDay;\r\n  };\r\n\r\n  private _focusOnUpdate: boolean;\r\n\r\n  constructor(props: ICalendarProps) {\r\n    super();\r\n\r\n    let currentDate = props.value && !isNaN(props.value.getTime()) ? props.value : new Date();\r\n    this.state = {\r\n      selectedDate: currentDate,\r\n      navigatedDate: currentDate\r\n    };\r\n\r\n    this._focusOnUpdate = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarProps) {\r\n    let { autoNavigateOnSelection, value } = nextProps;\r\n\r\n    // Make sure auto-navigation is supported for programmatic changes to selected date, i.e.,\r\n    // if selected date is updated via props, we may need to modify the navigated date\r\n    let overrideNavigatedDate = (autoNavigateOnSelection && !compareDates(value, this.props.value));\r\n    if (overrideNavigatedDate) {\r\n      this.setState({\r\n        navigatedDate: value\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      selectedDate: value || new Date()\r\n    });\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    if (this._focusOnUpdate) {\r\n      this.refs.dayPicker.focus();\r\n      this._focusOnUpdate = false;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let rootClass = 'ms-DatePicker';\r\n    let { firstDayOfWeek, dateRangeType, strings, isMonthPickerVisible, autoNavigateOnSelection, showGoToToday } = this.props;\r\n    let { selectedDate, navigatedDate } = this.state;\r\n\r\n    return (\r\n      <div className={ css(rootClass, styles.root) } ref='root'>\r\n        <div className={ css(\r\n          'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused',\r\n          styles.picker,\r\n          styles.pickerIsOpened,\r\n          styles.pickerIsFocused,\r\n          isMonthPickerVisible && ('is-monthPickerVisible ' + styles.pickerIsMonthPickerVisible)\r\n        ) } >\r\n          <div className={ css('ms-DatePicker-holder', styles.holder) } onKeyDown={ this._onDatePickerPopupKeyDown }>\r\n            <div className={ css('ms-DatePicker-frame', styles.frame) }>\r\n              <div className={ css('ms-DatePicker-wrap', styles.wrap) }>\r\n                <CalendarDay\r\n                  selectedDate={ selectedDate }\r\n                  navigatedDate={ navigatedDate }\r\n                  onSelectDate={ this._onSelectDate }\r\n                  onNavigateDate={ this._onNavigateDate }\r\n                  onDismiss={ this.props.onDismiss }\r\n                  firstDayOfWeek={ firstDayOfWeek }\r\n                  dateRangeType={ dateRangeType }\r\n                  autoNavigateOnSelection={ autoNavigateOnSelection }\r\n                  strings={ strings }\r\n                  ref='dayPicker' />\r\n\r\n                { isMonthPickerVisible && <CalendarMonth\r\n                  navigatedDate={ navigatedDate }\r\n                  strings={ strings }\r\n                  onNavigateDate={ this._onNavigateDate } /> }\r\n\r\n                { showGoToToday && <span\r\n                  className={ css('ms-DatePicker-goToday js-goToday', styles.goToday) }\r\n                  onClick={ this._onGotoToday }\r\n                  onKeyDown={ this._onGotoTodayKeyDown }\r\n                  tabIndex={ 0 }>\r\n                  { strings.goToToday }\r\n                </span> }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.dayPicker) {\r\n      this.refs.dayPicker.focus();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _navigateDay(date: Date) {\r\n    this.setState({\r\n      navigatedDate: date\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onNavigateDate(date: Date, focusOnNavigatedDay: boolean) {\r\n    this._navigateDay(date);\r\n    this._focusOnUpdate = focusOnNavigatedDay;\r\n  }\r\n\r\n  @autobind\r\n  private _onSelectDate(date: Date, selectedDateRangeArray: Date[]) {\r\n    let { onSelectDate } = this.props;\r\n\r\n    this.setState({\r\n      selectedDate: date\r\n    });\r\n\r\n    if (onSelectDate) {\r\n      onSelectDate(date, selectedDateRangeArray);\r\n    }\r\n  };\r\n\r\n  @autobind\r\n  private _onGotoToday() {\r\n    this._navigateDay(new Date());\r\n    this._focusOnUpdate = true;\r\n  };\r\n\r\n  @autobind\r\n  private _onGotoTodayKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter) {\r\n      ev.preventDefault();\r\n      this._onGotoToday();\r\n    } else if (ev.which === KeyCodes.tab && !ev.shiftKey) {\r\n      if (this.props.onDismiss) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        this.props.onDismiss();\r\n      }\r\n    }\r\n  };\r\n\r\n  @autobind\r\n  private _onDatePickerPopupKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    switch (ev.which) {\r\n      case KeyCodes.enter:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.backspace:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.escape:\r\n        this._handleEscKey(ev);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _handleEscKey(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (this.props.onDismiss() != null) {\r\n      this.props.onDismiss();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}