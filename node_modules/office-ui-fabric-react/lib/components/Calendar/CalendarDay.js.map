{"version":3,"sources":["components/Calendar/CalendarDay.tsx"],"names":[],"mappings":"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","file":"components/Calendar/CalendarDay.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  getId,\r\n  getRTL,\r\n  getRTLSafeKeyCode\r\n} from '../../Utilities';\r\nimport { DayOfWeek, ICalendarStrings } from './Calendar.Props';\r\nimport { FocusZone } from '../../FocusZone';\r\nimport { addDays, addWeeks, addMonths, compareDates } from '../../utilities/dateMath/DateMath';\r\nimport styles from './Calendar.scss';\r\n\r\nconst DAYS_IN_WEEK = 7;\r\n\r\nexport interface IDayInfo {\r\n  key: string;\r\n  date: string;\r\n  originalDate: Date;\r\n  isInMonth: boolean;\r\n  isToday: boolean;\r\n  isSelected: boolean;\r\n}\r\n\r\nexport interface ICalendarDayProps {\r\n  strings: ICalendarStrings;\r\n  selectedDate: Date;\r\n  navigatedDate: Date;\r\n  onSelectDate: (date: Date) => void;\r\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\r\n  firstDayOfWeek: DayOfWeek;\r\n}\r\n\r\nexport interface ICalendarDayState {\r\n  activeDescendantId?: string;\r\n  weeks?: IDayInfo[][];\r\n}\r\n\r\nexport class CalendarDay extends BaseComponent<ICalendarDayProps, ICalendarDayState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    navigatedDay: HTMLElement;\r\n  };\r\n\r\n  public constructor(props: ICalendarDayProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeDescendantId: getId('DatePickerDay-active'),\r\n      weeks: this._getWeeks(props.navigatedDate, props.selectedDate)\r\n    };\r\n\r\n    this._onSelectNextMonth = this._onSelectNextMonth.bind(this);\r\n    this._onSelectPrevMonth = this._onSelectPrevMonth.bind(this);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarDayProps) {\r\n    this.setState({\r\n      weeks: this._getWeeks(nextProps.navigatedDate, nextProps.selectedDate)\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let { activeDescendantId, weeks } = this.state;\r\n    let { firstDayOfWeek, strings, navigatedDate, onSelectDate } = this.props;\r\n\r\n    let selectDayCallbacks = {};\r\n    weeks.map((week, index) => week.map(day => selectDayCallbacks[day.key] = onSelectDate.bind(this, day.originalDate)));\r\n\r\n    return (\r\n      <div className={ css('ms-DatePicker-dayPicker', styles.dayPicker) }>\r\n        <div className={ css('ms-DatePicker-header', styles.header) }>\r\n          <div className={ css('ms-DatePicker-month', styles.month) }>{ strings.months[navigatedDate.getMonth()] }</div>\r\n          <div className={ css('ms-DatePicker-year', styles.year) }>{ navigatedDate.getFullYear() }</div>\r\n        </div>\r\n        <div className={ css('ms-DatePicker-monthComponents', styles.monthComponents) }>\r\n          <div className={ css('ms-DatePicker-navContainer', styles.navContainer) }>\r\n            <span\r\n              className={ css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth) }\r\n              onClick={ this._onSelectPrevMonth }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectPrevMonth) }\r\n              tabIndex={ 0 }>\r\n              <i className={ css('ms-Icon', { 'ms-Icon--ChevronLeft': !getRTL(), 'ms-Icon--ChevronRight': getRTL() }) } />\r\n            </span >\r\n            <span\r\n              className={ css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth) }\r\n              onClick={ this._onSelectNextMonth }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectNextMonth) }\r\n              tabIndex={ 0 }>\r\n              <i className={ css('ms-Icon', { 'ms-Icon--ChevronLeft': getRTL(), 'ms-Icon--ChevronRight': !getRTL() }) } />\r\n            </span >\r\n          </div >\r\n          <div className={ css('ms-DatePicker-headerToggleView js-showMonthPicker', styles.headerToggleView) } />\r\n        </div >\r\n        <FocusZone>\r\n          <table\r\n            className={ css('ms-DatePicker-table', styles.table) }\r\n            role='grid'\r\n            aria-readonly='true'\r\n            aria-multiselectable='false'\r\n            aria-activedescendant={ activeDescendantId }\r\n          >\r\n            <thead>\r\n              <tr>\r\n                { strings.shortDays.map((val, index) =>\r\n                  <th\r\n                    className={ css('ms-DatePicker-weekday', styles.weekday) }\r\n                    scope='col'\r\n                    key={ index }\r\n                    title={ strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK] }\r\n                  >\r\n                    { strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK] }\r\n                  </th>) }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { weeks.map((week, weekIndex) =>\r\n                <tr key={ weekIndex }>\r\n                  { week.map((day, dayIndex) =>\r\n                    <td role='presentation' key={ day.key }>\r\n                      <div\r\n                        className={ css(\r\n                          'ms-DatePicker-day',\r\n                          styles.day,\r\n                          {\r\n                            ['ms-DatePicker-day--infocus ' + styles.dayIsFocused]: day.isInMonth,\r\n                            ['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused]: !day.isInMonth,\r\n                            ['ms-DatePicker-day--today ' + styles.dayIsToday]: day.isToday,\r\n                            ['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted]: day.isSelected\r\n                          }) }\r\n                        role='gridcell'\r\n                        onClick={ selectDayCallbacks[day.key] }\r\n                        onKeyDown={ (ev: React.KeyboardEvent<HTMLElement>) =>\r\n                          this._navigateMonthEdge(ev, day.originalDate, weekIndex, dayIndex) }\r\n                        aria-selected={ day.isSelected }\r\n                        id={ compareDates(navigatedDate, day.originalDate) ? activeDescendantId : null }\r\n                        data-is-focusable={ true }\r\n                        ref={ compareDates(navigatedDate, day.originalDate) ? 'navigatedDay' : null }\r\n                        key={ compareDates(navigatedDate, day.originalDate) ? 'navigatedDay' : null } >\r\n                        { day.date }\r\n                      </div>\r\n                    </td>\r\n                  ) }\r\n                </tr>\r\n              ) }\r\n            </tbody>\r\n          </table>\r\n        </FocusZone>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.navigatedDay) {\r\n      this.refs.navigatedDay.tabIndex = 0;\r\n      this.refs.navigatedDay.focus();\r\n    }\r\n  }\r\n\r\n  private _navigateMonthEdge(ev: React.KeyboardEvent<HTMLElement>, date: Date, weekIndex: number, dayIndex: number) {\r\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\r\n      this.props.onNavigateDate(addWeeks(date, -1), true);\r\n      ev.preventDefault();\r\n    } else if (weekIndex === (this.state.weeks.length - 1) && ev.which === KeyCodes.down) {\r\n      this.props.onNavigateDate(addWeeks(date, 1), true);\r\n      ev.preventDefault();\r\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\r\n      this.props.onNavigateDate(addDays(date, -1), true);\r\n      ev.preventDefault();\r\n    } else if (dayIndex === (DAYS_IN_WEEK - 1) && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\r\n      this.props.onNavigateDate(addDays(date, 1), true);\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _onKeyDown(callback: () => void, ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private _onSelectNextMonth() {\r\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, 1), false);\r\n  }\r\n\r\n  private _onSelectPrevMonth() {\r\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, -1), false);\r\n  }\r\n\r\n  private _getWeeks(navigatedDate: Date, selectedDate: Date): IDayInfo[][] {\r\n    let { firstDayOfWeek } = this.props;\r\n    let date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\r\n    let today = new Date();\r\n    let weeks = [];\r\n    let week;\r\n\r\n    // Cycle the date backwards to get to the first day of the week.\r\n    while (date.getDay() !== firstDayOfWeek) {\r\n      date.setDate(date.getDate() - 1);\r\n    }\r\n\r\n    // a flag to indicate whether all days of the week are in the month\r\n    let isAllDaysOfWeekOutOfMonth = false;\r\n\r\n    for (let weekIndex = 0; !isAllDaysOfWeekOutOfMonth; weekIndex++) {\r\n      week = [];\r\n\r\n      isAllDaysOfWeekOutOfMonth = true;\r\n\r\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\r\n        let dayInfo = {\r\n          key: date.toString(),\r\n          date: date.getDate(),\r\n          originalDate: new Date(date.toString()),\r\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\r\n          isToday: compareDates(today, date),\r\n          isSelected: compareDates(selectedDate, date)\r\n        };\r\n\r\n        week.push(dayInfo);\r\n\r\n        if (dayInfo.isInMonth) {\r\n          isAllDaysOfWeekOutOfMonth = false;\r\n        }\r\n\r\n        date.setDate(date.getDate() + 1);\r\n      }\r\n\r\n      if (!isAllDaysOfWeekOutOfMonth) {\r\n        weeks.push(week);\r\n      }\r\n    }\r\n\r\n    return weeks;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}