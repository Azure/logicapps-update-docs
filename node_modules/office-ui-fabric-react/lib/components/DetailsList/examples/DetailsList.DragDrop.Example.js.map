{"version":3,"sources":["components/DetailsList/examples/DetailsList.DragDrop.Example.tsx"],"names":[],"mappings":"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","file":"components/DetailsList/examples/DetailsList.DragDrop.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { DetailsList, Selection } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { IDetailsRowProps, DetailsRow } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport {\r\n  IDragDropHelper,\r\n  IDragDropEvents,\r\n  IDragDropOptions,\r\n  IDragDropContext\r\n} from 'office-ui-fabric-react/lib/utilities/dragdrop/interfaces';\r\nimport { createListItems } from '@uifabric/example-app-base';\r\nimport './DetailsList.DragDrop.Example.scss';\r\n\r\nlet _draggedItem: any = null;\r\nlet _draggedIndex: number = -1;\r\n\r\nexport class DetailsListDragDropExample extends React.Component<any, any> {\r\n  private _selection: Selection;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._onRenderItemColumn = this._onRenderItemColumn.bind(this);\r\n\r\n    this._selection = new Selection();\r\n\r\n    this.state = {\r\n      items: createListItems(10)\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <div className='detailsListDragDropExample'>\r\n        <div>{ selectionDetails }</div>\r\n        <MarqueeSelection selection={ this._selection }>\r\n          <DetailsList\r\n            setKey='items'\r\n            items={ items }\r\n            selection={ this._selection }\r\n            selectionPreservedOnEmptyClick={ true }\r\n            onItemInvoked={ (item) => { alert(`Item invoked: ${item.name}`); } }\r\n            onRenderItemColumn={ this._onRenderItemColumn }\r\n            dragDropEvents={ this._getDragDropEvents() }\r\n          />\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getDragDropEvents(): IDragDropEvents {\r\n    return {\r\n      canDrop: (dropContext?: IDragDropContext, dragContext?: IDragDropContext) => { return true; },\r\n      canDrag: (item?: any) => { return true; },\r\n      onDragEnter: (item?: any, event?: DragEvent) => { return 'dragEnter'; }, // return string is the css classes that will be added to the entering element.\r\n      onDragLeave: (item?: any, event?: DragEvent) => { return; },\r\n      onDrop: (item?: any, event?: DragEvent) => {\r\n        if (_draggedItem) {\r\n          this._insertBeforeItem(item);\r\n        }\r\n      },\r\n      onDragStart: (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent) => {\r\n        _draggedItem = item;\r\n        _draggedIndex = itemIndex;\r\n      },\r\n      onDragEnd: (item?: any, event?: DragEvent) => {\r\n        _draggedItem = null;\r\n        _draggedIndex = -1;\r\n      },\r\n    };\r\n  }\r\n\r\n  private _onRenderItemColumn(item, index, column) {\r\n    if (column.key === 'name') {\r\n      return <Link data-selection-invoke={ true }>{ item[column.key] }</Link>;\r\n    }\r\n\r\n    return item[column.key];\r\n  }\r\n\r\n  private _insertBeforeItem(item) {\r\n    let draggedItems = this._selection.isIndexSelected(_draggedIndex) ? this._selection.getSelection() : [_draggedItem];\r\n\r\n    let items: any[] = this.state.items.filter((i) => draggedItems.indexOf(i) === -1);\r\n    let insertIndex = items.indexOf(item);\r\n\r\n    // if dragging/dropping on itself, index will be 0.\r\n    if (insertIndex === -1) {\r\n      insertIndex = 0;\r\n    }\r\n\r\n    items.splice(insertIndex, 0, ...draggedItems);\r\n\r\n    this.setState({ items: items });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}