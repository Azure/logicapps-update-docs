"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable */
var React = require("react");
/* tslint:enable */
var Utilities_1 = require("../../../../Utilities");
var Persona_1 = require("../../../../Persona");
var Button_1 = require("../../../../Button");
var stylesImport = require("./PickerItemsDefault.scss");
var styles = stylesImport;
exports.SelectedItemDefault = function (peoplePickerItemProps) {
    var item = peoplePickerItemProps.item, onRemoveItem = peoplePickerItemProps.onRemoveItem, index = peoplePickerItemProps.index, selected = peoplePickerItemProps.selected;
    return (React.createElement("div", { className: Utilities_1.css('ms-PickerPersona-container', styles.personaContainer, (_a = {},
            _a['is-selected ' + styles.personaContainerIsSelected] = selected,
            _a)), "data-is-focusable": true, "data-selection-index": index },
        React.createElement("div", { className: Utilities_1.css('ms-PickerItem-content', styles.itemContent) },
            React.createElement(Persona_1.Persona, __assign({}, item, { presence: item.presence !== undefined ? item.presence : Persona_1.PersonaPresence.none, size: Persona_1.PersonaSize.extraExtraSmall }))),
        React.createElement(Button_1.IconButton, { onClick: function () { if (onRemoveItem) {
                onRemoveItem();
            } }, iconProps: { iconName: 'Cancel' }, className: Utilities_1.css('ms-PickerItem-content', styles.removeButton, styles.itemContent), "data-is-focusable": false })));
    var _a;
};

//# sourceMappingURL=SelectedItemDefault.js.map
