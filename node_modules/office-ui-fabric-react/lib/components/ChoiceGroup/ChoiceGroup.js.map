{"version":3,"sources":["components/ChoiceGroup/ChoiceGroup.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,qCAAoC;AACpC,qCAAoC;AACpC,mCAAkC;AAElC,6CAIyB;AACzB,uDAAwC;AASxC;IAAiC,+BAAmD;IASlF,qBAAY,KAAwB;QAApC,YACE,kBAAM,KAAK,YAAI,GAAC,WAAW,IAAG,UAAU,MAAG,SAS5C;QAPC,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;YAC9C,UAAU,EAAE,SAAS;SACtB,CAAC;QAEF,KAAI,CAAC,GAAG,GAAG,iBAAK,CAAC,aAAa,CAAC,CAAC;QAChC,KAAI,CAAC,QAAQ,GAAG,iBAAK,CAAC,kBAAkB,CAAC,CAAC;;;IAC5C,CAAC;IAEM,+CAAyB,GAAhC,UAAiC,QAA2B;QAC1D,IAAM,aAAa,GAAW,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpE,IAAM,aAAa,GAAW,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEtE,EAAE,CAAC,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC;gBACZ,UAAU,EAAE,aAAa;aAC1B,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEM,4BAAM,GAAb;QAAA,iBA6CC;QA5CK,IAAA,eAAoD,EAAlD,gBAAK,EAAE,oBAAO,EAAE,wBAAS,EAAE,sBAAQ,CAAgB;QACrD,IAAA,eAAuC,EAArC,0BAAU,EAAE,0BAAU,CAAgB;QAE5C,MAAM,CAAC;QACL,yGAAyG;QACzG,6BAAK,IAAI,EAAC,aAAa,EAAC,SAAS,EAAG,SAAS;YAC3C,6BACE,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,0BAAM,CAAC,IAAI,CAAC,EACnD,IAAI,EAAC,YAAY,qBACC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE;gBAE3D,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CACpB,oBAAC,aAAK,IAAC,SAAS,EAAG,SAAS,EAAG,QAAQ,EAAG,QAAQ,EAAG,EAAE,EAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,IAAK,KAAK,CAAU,CAClG;gBAEC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM;oBAAK,OAAA,CACxB,6BACE,GAAG,EAAG,MAAM,CAAC,GAAG,EAChB,SAAS,EAAG,eAAG,CAAC,gBAAgB,EAAE,0BAAM,CAAC,WAAW;4BAClD,GAAC,wBAAwB,GAAG,0BAAM,CAAC,kBAAkB,IAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS;4BAC/F,GAAC,aAAa,GAAG,0BAAM,CAAC,oBAAoB,IAAG,MAAM,CAAC,GAAG,KAAK,UAAU;gCACxE;wBAGF,+BACE,GAAG,EAAG,UAAC,CAAC,IAAuB,OAAA,KAAI,CAAC,aAAa,GAAG,CAAC,EAAtB,CAAsB,EACrD,EAAE,EAAM,KAAI,CAAC,GAAG,SAAI,MAAM,CAAC,GAAK,EAChC,SAAS,EAAG,eAAG,CAAC,sBAAsB,EAAE,0BAAM,CAAC,KAAK,CAAC,EACrD,IAAI,EAAC,OAAO,EACZ,IAAI,EAAG,KAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAI,CAAC,GAAG,EAClC,QAAQ,EAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EACtE,OAAO,EAAG,MAAM,CAAC,GAAG,KAAK,UAAU,EACnC,QAAQ,EAAG,QAAQ,EACnB,QAAQ,EAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,EAAE,MAAM,CAAC,EAC5C,OAAO,EAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,EAAE,MAAM,CAAC,EAC1C,MAAM,EAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,EAAE,MAAM,CAAC,qBACnB,KAAI,CAAC,QAAQ,SAAI,MAAM,CAAC,GAAK,GAClD;wBACA,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CACvB,CACP;;gBAzByB,CAyBzB,CAAC,CACE,CACF,CACP,CAAC;IACJ,CAAC;IAEM,2BAAK,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC;IACH,CAAC;IAEO,8BAAQ,GAAhB,UAAiB,MAA0B,EAAE,EAAiC;QAC5E,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,MAAM,CAAC,GAAG;YACtB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;SAClC,CAAC,CAAC;IACL,CAAC;IAEO,6BAAO,GAAf,UAAgB,MAA0B,EAAE,EAAiC;QAC3E,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;SAClC,CAAC,CAAC;IACL,CAAC;IAEO,kCAAY,GAApB,UAAqB,MAA0B;QACrC,IAAA,kCAAU,CAAgB;QAClC,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAE7E,MAAM,CAAC,CACL,+BACE,OAAO,EAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EACrC,SAAS,EAAG,eAAG;gBACb,GAAC,uBAAuB,GAAG,0BAAM,CAAC,KAAK,IAAG,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS;gBAC/E,GAAC,8BAA8B,GAAG,0BAAM,CAAC,YAAY,IAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS;gBAC/F,GAAC,aAAa,GAAG,0BAAM,CAAC,cAAc,IAAG,MAAM,CAAC,GAAG,KAAK,UAAU;gBAClE,GAAC,cAAc,GAAG,0BAAM,CAAC,eAAe,IAAG,UAAU;oBACrD;YAGA,MAAM,CAAC,QAAQ,IAAI,CACjB,6BAAK,SAAS,EAAG,eAAG,CAAC,2BAA2B,EAAE,0BAAM,CAAC,UAAU,CAAC;gBAClE,6BAAK,SAAS,EAAG,eAAG,CAClB,6BAA6B,EAC7B,0BAAM,CAAC,YAAY;wBAEjB,GAAC,YAAY,GAAG,0BAAM,CAAC,oBAAoB,IAAG,MAAM,CAAC,GAAG,KAAK,UAAU;4BACvE;oBAEF,oBAAC,aAAK,IACJ,GAAG,EAAG,MAAM,CAAC,QAAQ,EACrB,KAAK,EAAG,MAAM,CAAC,SAAS,CAAC,KAAK,EAC9B,MAAM,EAAG,MAAM,CAAC,SAAS,CAAC,MAAM,GAChC,CACE;gBACN,6BAAK,SAAS,EAAG,eAAG,CAClB,6BAA6B,EAC7B,0BAAM,CAAC,YAAY;wBAEjB,GAAC,YAAY,GAAG,0BAAM,CAAC,oBAAoB,IAAG,MAAM,CAAC,GAAG,KAAK,UAAU;4BACvE;oBAEF,oBAAC,aAAK,IACJ,GAAG,EAAG,MAAM,CAAC,gBAAgB,EAC7B,KAAK,EAAG,MAAM,CAAC,SAAS,CAAC,KAAK,EAC9B,MAAM,EAAG,MAAM,CAAC,SAAS,CAAC,MAAM,GAChC,CACE,CACF,CACP;YAGD,MAAM,CAAC,SAAS;kBACZ,6BAAK,SAAS,EAAG,eAAG,CAAC,2BAA2B,EAAE,0BAAM,CAAC,UAAU,CAAC;oBACpE,6BAAK,SAAS,EAAG,eAAG,CAAC,4BAA4B,EAAE,0BAAM,CAAC,WAAW,CAAC;wBACpE,oBAAC,WAAI,eAAM,MAAM,CAAC,SAAS,EAAK,CAC5B,CACF;kBACJ,IAAI;YAGR,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS;kBAC/B,CACA,6BAAK,SAAS,EAAG,eAAG,CAAC,6BAA6B,EAAE,0BAAM,CAAC,YAAY,CAAC;oBACtE,oBAAC,WAAI,IAAC,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,0BAAM,CAAC,IAAI,CAAC,EAAG,QAAQ,EAAC,WAAW,GAAG;oBACnF,8BAAM,EAAE,EAAM,IAAI,CAAC,QAAQ,SAAI,MAAM,CAAC,GAAK,EAAG,SAAS,EAAC,UAAU,IAAG,MAAM,CAAC,IAAI,CAAS,CACrF,CACP,GAAG,CACF,8BAAM,EAAE,EAAM,IAAI,CAAC,QAAQ,SAAI,MAAM,CAAC,GAAK,EAAG,SAAS,EAAC,UAAU,IAAG,MAAM,CAAC,IAAI,CAAS,CAC1F,CAEC,CACT,CAAC;;IACJ,CAAC;IAEO,+BAAS,GAAjB,UAAkB,MAA0B,EAAE,GAAsC;QAC9E,IAAA,eAAoC,EAAlC,wBAAS,EAAE,sBAAQ,CAAgB;QAEzC,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,MAAM,CAAC,GAAG;SACvB,CAAC,CAAC;QAEH,+FAA+F;QAC/F,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACrB,SAAS,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC;IACH,CAAC;IAED;;;OAGG;IACK,oCAAc,GAAtB,UAAuB,OAA6B;QAClD,IAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,MAA0B;YAC/D,MAAM,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/B,CAAC;IACH,CAAC;IACH,kBAAC;AAAD,CAvMA,AAuMC,CAvMgC,yBAAa;AAC9B,wBAAY,GAAG;IAC3B,OAAO,EAAE,EAAE;CACZ,CAAC;AAHS,kCAAW","file":"components/ChoiceGroup/ChoiceGroup.js","sourcesContent":["import * as React from 'react';\r\nimport { Image } from '../../Image';\r\nimport { Label } from '../../Label';\r\nimport { Icon } from '../../Icon';\r\nimport { IChoiceGroupOption, IChoiceGroupProps } from './ChoiceGroup.Props';\r\nimport {\r\n  css,\r\n  getId,\r\n  BaseComponent\r\n} from '../../Utilities';\r\nimport styles from './ChoiceGroup.scss';\r\n\r\nexport interface IChoiceGroupState {\r\n  keyChecked: string;\r\n\r\n  /** Is true when the control has focus. */\r\n  keyFocused?: string;\r\n}\r\n\r\nexport class ChoiceGroup extends BaseComponent<IChoiceGroupProps, IChoiceGroupState> {\r\n  public static defaultProps = {\r\n    options: []\r\n  };\r\n\r\n  private _id: string;\r\n  private _labelId: string;\r\n  private _inputElement: HTMLInputElement;\r\n\r\n  constructor(props: IChoiceGroupProps, ) {\r\n    super(props, { ['onChanged']: 'onChange' });\r\n\r\n    this.state = {\r\n      keyChecked: this._getKeyChecked(props.options),\r\n      keyFocused: undefined\r\n    };\r\n\r\n    this._id = getId('ChoiceGroup');\r\n    this._labelId = getId('ChoiceGroupLabel');\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IChoiceGroupProps) {\r\n    const newKeyChecked: string = this._getKeyChecked(newProps.options);\r\n    const oldKeyCheched: string = this._getKeyChecked(this.props.options);\r\n\r\n    if (newKeyChecked !== oldKeyCheched) {\r\n      this.setState({\r\n        keyChecked: newKeyChecked,\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { label, options, className, required } = this.props;\r\n    let { keyChecked, keyFocused } = this.state;\r\n\r\n    return (\r\n      // Need to assign role application on containing div because JAWS doesnt call OnKeyDown without this role\r\n      <div role='application' className={ className }>\r\n        <div\r\n          className={ css('ms-ChoiceFieldGroup', styles.root) }\r\n          role='radiogroup'\r\n          aria-labelledby={ this.props.label ? this._id + '-label' : '' }\r\n        >\r\n          { this.props.label && (\r\n            <Label className={ className } required={ required } id={ this._id + '-label' }>{ label }</Label>\r\n          ) }\r\n\r\n          { options.map((option) => (\r\n            <div\r\n              key={ option.key }\r\n              className={ css('ms-ChoiceField', styles.choiceField, {\r\n                ['ms-ChoiceField--image ' + styles.choiceFieldIsImage]: !!option.imageSrc || !!option.iconProps,\r\n                ['is-inFocus ' + styles.choiceFieldIsInFocus]: option.key === keyFocused\r\n              })\r\n              }\r\n            >\r\n              <input\r\n                ref={ (c): HTMLInputElement => this._inputElement = c }\r\n                id={ `${this._id}-${option.key}` }\r\n                className={ css('ms-ChoiceField-input', styles.input) }\r\n                type='radio'\r\n                name={ this.props.name || this._id }\r\n                disabled={ option.isDisabled || option.disabled || this.props.disabled }\r\n                checked={ option.key === keyChecked }\r\n                required={ required }\r\n                onChange={ this._onChange.bind(this, option) }\r\n                onFocus={ this._onFocus.bind(this, option) }\r\n                onBlur={ this._onBlur.bind(this, option) }\r\n                aria-labelledby={ `${this._labelId}-${option.key}` }\r\n              />\r\n              { this._renderField(option) }\r\n            </div>\r\n          )) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this._inputElement) {\r\n      this._inputElement.focus();\r\n    }\r\n  }\r\n\r\n  private _onFocus(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      keyFocused: option.key,\r\n      keyChecked: this.state.keyChecked\r\n    });\r\n  }\r\n\r\n  private _onBlur(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      keyFocused: undefined,\r\n      keyChecked: this.state.keyChecked\r\n    });\r\n  }\r\n\r\n  private _renderField(option: IChoiceGroupOption) {\r\n    const { keyChecked } = this.state;\r\n    let isDisabled = option.isDisabled || option.disabled || this.props.disabled;\r\n\r\n    return (\r\n      <label\r\n        htmlFor={ this._id + '-' + option.key }\r\n        className={ css({\r\n          ['ms-ChoiceField-field ' + styles.field]: !option.imageSrc && !option.iconProps,\r\n          ['ms-ChoiceField-field--image ' + styles.fieldIsImage]: !!option.imageSrc || !!option.iconProps,\r\n          ['is-checked ' + styles.fieldIsChecked]: option.key === keyChecked,\r\n          ['is-disabled ' + styles.fieldIsDisabled]: isDisabled\r\n        }) }\r\n      >\r\n        {\r\n          option.imageSrc && (\r\n            <div className={ css('ms-ChoiceField-innerField', styles.innerField) }>\r\n              <div className={ css(\r\n                'ms-ChoiceField-imageWrapper',\r\n                styles.imageWrapper,\r\n                {\r\n                  ['is-hidden ' + styles.imageWrapperIsHidden]: option.key === keyChecked\r\n                }) }\r\n              >\r\n                <Image\r\n                  src={ option.imageSrc }\r\n                  width={ option.imageSize.width }\r\n                  height={ option.imageSize.height }\r\n                />\r\n              </div>\r\n              <div className={ css(\r\n                'ms-ChoiceField-imageWrapper',\r\n                styles.imageWrapper,\r\n                {\r\n                  ['is-hidden ' + styles.imageWrapperIsHidden]: option.key !== keyChecked\r\n                }) }\r\n              >\r\n                <Image\r\n                  src={ option.selectedImageSrc }\r\n                  width={ option.imageSize.width }\r\n                  height={ option.imageSize.height }\r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          option.iconProps\r\n            ? <div className={ css('ms-ChoiceField-innerField', styles.innerField) }>\r\n              <div className={ css('ms-ChoiceField-iconWrapper', styles.iconWrapper) }>\r\n                <Icon { ...option.iconProps } />\r\n              </div>\r\n            </div>\r\n            : null\r\n        }\r\n        {\r\n          option.imageSrc || option.iconProps\r\n            ? (\r\n              <div className={ css('ms-ChoiceField-labelWrapper', styles.labelWrapper) }>\r\n                <Icon className={ css('ms-ChoiceField-icon', styles.icon) } iconName='CheckMark' />\r\n                <span id={ `${this._labelId}-${option.key}` } className='ms-Label'>{ option.text }</span>\r\n              </div>\r\n            ) : (\r\n              <span id={ `${this._labelId}-${option.key}` } className='ms-Label'>{ option.text }</span>\r\n            )\r\n        }\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private _onChange(option: IChoiceGroupOption, evt: React.FormEvent<HTMLInputElement>) {\r\n    let { onChanged, onChange } = this.props;\r\n\r\n    this.setState({\r\n      keyChecked: option.key\r\n    });\r\n\r\n    // TODO: onChanged deprecated, remove else if after 07/17/2017 when onChanged has been removed.\r\n    if (onChange) {\r\n      onChange(evt, option);\r\n    } else if (onChanged) {\r\n      onChanged(option);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If all the isChecked property of options are falsy values, return undefined;\r\n   * Else return the key of the first option with the truthy isChecked property.\r\n   */\r\n  private _getKeyChecked(options: IChoiceGroupOption[]): string {\r\n    const optionsChecked = options.filter((option: IChoiceGroupOption) => {\r\n      return option.isChecked || option.checked;\r\n    });\r\n\r\n    if (optionsChecked.length === 0) {\r\n      return undefined;\r\n    } else {\r\n      return optionsChecked[0].key;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}