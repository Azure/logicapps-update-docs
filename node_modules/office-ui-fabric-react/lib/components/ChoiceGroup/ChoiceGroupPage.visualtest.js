"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("./index");
/* tslint:disable:no-unused-variable */
var React = require("react");
/* tslint:enable:no-unused-variable */
var ChoiceGroupVPage = (function (_super) {
    __extends(ChoiceGroupVPage, _super);
    function ChoiceGroupVPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChoiceGroupVPage.prototype.render = function () {
        return React.createElement("div", null,
            React.createElement("div", { style: { backgroundColor: 'white' } },
                React.createElement(index_1.ChoiceGroup, { label: 'Choice Group', className: 'ChoiceGroup', defaultSelectedKey: 'bar', options: [{
                            key: 'bar',
                            text: 'Bar chart'
                        }, {
                            key: 'pie',
                            text: 'Pie chart'
                        }
                    ] })),
            React.createElement("div", { style: { backgroundColor: 'white' } },
                React.createElement(index_1.ChoiceGroup, { label: 'Choice Group Icon', className: 'ChoiceGroupIcon', defaultSelectedKey: 'day', options: [{
                            key: 'day',
                            iconProps: { iconName: 'CalendarDay' },
                            text: 'Day'
                        }, {
                            key: 'week',
                            iconProps: { iconName: 'CalendarWeek' },
                            text: 'Week'
                        }] })),
            React.createElement("div", { style: { backgroundColor: 'white' } },
                React.createElement(index_1.ChoiceGroup, { label: 'Choice Group Disabled', className: 'ChoiceGroupDisabled', defaultSelectedKey: 'bar', disabled: true, options: [{
                            key: 'bar',
                            text: 'Bar chart'
                        }, {
                            key: 'pie',
                            text: 'Pie chart'
                        }
                    ] })));
    };
    return ChoiceGroupVPage;
}(React.Component));
exports.default = ChoiceGroupVPage;

//# sourceMappingURL=ChoiceGroupPage.visualtest.js.map
