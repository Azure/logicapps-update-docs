{"version":3,"sources":["utilities/decorators/withViewport.tsx"],"names":[],"mappings":"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","file":"utilities/decorators/withViewport.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseDecorator } from './BaseDecorator';\r\nimport {\r\n  findScrollableParent,\r\n  getRect\r\n} from '../../Utilities';\r\n\r\nexport interface IViewport {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface IWithViewportState {\r\n  viewport?: IViewport;\r\n}\r\n\r\nconst RESIZE_DELAY = 500;\r\nconst MAX_RESIZE_ATTEMPTS = 3;\r\n\r\nexport function withViewport<P extends { viewport?: IViewport }, S>(ComposedComponent: (new (props: P, ...args: any[]) => React.Component<P, S>)): any {\r\n\r\n  return class WithViewportComponent extends BaseDecorator<P, IWithViewportState> {\r\n    public refs: {\r\n      [key: string]: React.ReactInstance;\r\n    };\r\n\r\n    private _resizeAttempts: number;\r\n\r\n    constructor() {\r\n      super();\r\n      this._resizeAttempts = 0;\r\n\r\n      this.state = {\r\n        viewport: {\r\n          width: 0,\r\n          height: 0\r\n        }\r\n      };\r\n    }\r\n\r\n    public componentDidMount() {\r\n      this._onAsyncResize = this._async.debounce(\r\n        this._onAsyncResize,\r\n        RESIZE_DELAY,\r\n        {\r\n          leading: false\r\n        });\r\n\r\n      this._events.on(window, 'resize', this._onAsyncResize);\r\n      this._updateViewport();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n      this._events.dispose();\r\n    }\r\n\r\n    public render() {\r\n      let { viewport } = this.state;\r\n      let isViewportVisible = viewport.width > 0 && viewport.height > 0;\r\n\r\n      return (\r\n        <div className='ms-Viewport' ref='root' style={ { minWidth: 1, minHeight: 1 } }>\r\n          { isViewportVisible && (\r\n            <ComposedComponent ref={ this._updateComposedComponentRef } viewport={ viewport } { ...this.props as any } />\r\n          ) }\r\n        </div>\r\n      );\r\n    }\r\n\r\n    public forceUpdate() {\r\n      this._updateViewport(true);\r\n    }\r\n\r\n    private _onAsyncResize() {\r\n      this._updateViewport();\r\n    }\r\n\r\n    /* Note: using lambda here because decorators don't seem to work in decorators. */\r\n    private _updateViewport = (withForceUpdate?: boolean) => {\r\n      let { viewport } = this.state;\r\n      let viewportElement = (this.refs as any).root;\r\n      let scrollElement = findScrollableParent(viewportElement);\r\n      let scrollRect = getRect(scrollElement);\r\n      let clientRect = getRect(viewportElement);\r\n      let updateComponent = () => {\r\n        if (withForceUpdate && this._composedComponentInstance) {\r\n          this._composedComponentInstance.forceUpdate();\r\n        }\r\n      };\r\n\r\n      let isSizeChanged = (\r\n        clientRect.width !== viewport.width ||\r\n        scrollRect.height !== viewport.height);\r\n\r\n      if (isSizeChanged && this._resizeAttempts < MAX_RESIZE_ATTEMPTS) {\r\n        this._resizeAttempts++;\r\n        this.setState({\r\n          viewport: {\r\n            width: clientRect.width,\r\n            height: scrollRect.height\r\n          }\r\n        }, () => { this._updateViewport(withForceUpdate); });\r\n      } else {\r\n        this._resizeAttempts = 0;\r\n        updateComponent();\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}