{"version":3,"sources":["VisualTestRoot.tsx"],"names":[],"mappings":"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","file":"VisualTestRoot.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport * as ReactDOM from 'react-dom';\r\nimport { VisualTestState } from './VisualTestState';\r\nimport { Route, Router } from './utilities/router/index';\r\nimport { setBaseUrl } from './Utilities';\r\n\r\nsetBaseUrl('./dist/');\r\n\r\nlet rootElement;\r\nlet currentBreakpoint;\r\nlet scrollDistance;\r\nlet requireContext = require.context('./components', true, /Page.visualtest$/);\r\n\r\n// This is mostly taken from the react-website project.\r\n\r\nfunction _routerDidMount() {\r\n  if (_hasAnchorLink(window.location.hash)) {\r\n    let hash = _extractAnchorLink(window.location.hash);\r\n    let el = document.getElementById(hash);\r\n    let elRect = el.getBoundingClientRect();\r\n    let bodySTop = document.body.scrollTop;\r\n    let currentScrollPosition;\r\n    currentScrollPosition = bodySTop + elRect.top;\r\n    document.body.scrollTop = currentScrollPosition - scrollDistance;\r\n  }\r\n}\r\n\r\nfunction _hasAnchorLink(path) {\r\n  return (path.match(/#/g) || []).length > 1;\r\n}\r\n\r\nfunction _extractAnchorLink(path) {\r\n  let split = path.split('#');\r\n  let cleanedSplit = split.filter((value) => {\r\n    if (value === '') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  });\r\n  return cleanedSplit[cleanedSplit.length - 1];\r\n}\r\n\r\nfunction _onLoad() {\r\n\r\n  // Load the app into this element.\r\n  rootElement = rootElement || document.getElementById('content');\r\n\r\n  ReactDOM.render(\r\n    <div style={ { display: 'inline-block' } }>\r\n      <Router onNewRouteLoaded={ _routerDidMount }>\r\n        { _getAppRoutes() }\r\n      </Router>\r\n    </div>,\r\n    rootElement);\r\n}\r\n\r\nfunction _getAppRoutes() {\r\n  let routes = [];\r\n\r\n  // Create a route for each top level page, and all of its sub pages\r\n  VisualTestState.componentPath.forEach((path, pathIndex) => {\r\n    let componentNameIndex = path.lastIndexOf('/');\r\n    let name = path.substr(componentNameIndex + 1);\r\n    let url = name.substr(0, name.lastIndexOf('Page.visualtest'));\r\n    routes.push(\r\n      <Route\r\n        key={ pathIndex }\r\n        path={ '#/' + url }\r\n        getComponent={ getPath(path) } />);\r\n  });\r\n  return routes;\r\n}\r\n\r\nfunction getPath(path) {\r\n  return (cb => require.ensure([], () => cb((requireContext(path) as any).default)));\r\n}\r\n\r\nfunction _onUnload() {\r\n  if (rootElement) {\r\n    ReactDOM.unmountComponentAtNode(rootElement);\r\n  }\r\n}\r\n\r\nlet isReady = document.readyState === 'interactive' || document.readyState === 'complete';\r\n\r\nif (isReady) {\r\n  _onLoad();\r\n} else {\r\n  window.onload = _onLoad;\r\n}\r\n\r\nwindow.onunload = _onUnload;"],"sourceRoot":"..\\src"}