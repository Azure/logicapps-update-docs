{"version":3,"sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","file":"components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { ContextualMenu, IContextualMenuItem, DirectionalHint } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './ContextualMenuExample.scss';\r\n\r\nexport interface IContextualMenuMultiselectExampleState {\r\n  selection?: { [key: string]: boolean };\r\n  isContextMenuVisible?: boolean;\r\n}\r\n\r\nlet keys: string[] = ['newItem', 'share', 'mobile', 'enablePrint', 'enableMusic', 'newSub', 'emailMessage', 'calendarEvent'];\r\n\r\nexport class ContextualMenuCheckmarksExample extends React.Component<any, IContextualMenuMultiselectExampleState> {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._onToggleSelect = this._onToggleSelect.bind(this);\r\n    this._onClick = this._onClick.bind(this);\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n\r\n    this.state = {\r\n      selection: {},\r\n      isContextMenuVisible: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { selection } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          onClick={ this._onClick } id='ContextualMenuButton2'\r\n          text='Click for ContextualMenu'\r\n        />\r\n        { this.state.isContextMenuVisible ? (\r\n          <ContextualMenu\r\n            target='#ContextualMenuButton2'\r\n            shouldFocusOnMount={ false }\r\n            onDismiss={ this._onDismiss }\r\n            directionalHint={ DirectionalHint.bottomLeftEdge }\r\n            items={\r\n              [\r\n                {\r\n                  key: keys[0],\r\n                  name: 'New',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[0]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[1],\r\n                  name: 'Share',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[1]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[2],\r\n                  name: 'Mobile',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[2]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: 'divider_1',\r\n                  name: '-',\r\n                },\r\n\r\n                {\r\n                  key: keys[3],\r\n                  name: 'Print',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[3]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[4],\r\n                  name: 'Music',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[4]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[5],\r\n                  subMenuProps: {\r\n                    items: [\r\n                      {\r\n                        key: keys[6],\r\n                        name: 'Email message',\r\n                        canCheck: true,\r\n                        isChecked: selection[keys[6]],\r\n                        onClick: this._onToggleSelect\r\n                      },\r\n                      {\r\n                        key: keys[7],\r\n                        name: 'Calendar event',\r\n                        canCheck: true,\r\n                        isChecked: selection[keys[7]],\r\n                        onClick: this._onToggleSelect\r\n                      }\r\n                    ],\r\n                  },\r\n                  name: 'New'\r\n                },\r\n              ]\r\n            }\r\n          />) : (null) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem) {\r\n    let { selection } = this.state;\r\n\r\n    selection[item.key] = !selection[item.key];\r\n\r\n    this.setState({\r\n      selection: selection\r\n    });\r\n  }\r\n\r\n  private _onClick(event: React.MouseEvent<HTMLButtonElement>) {\r\n    this.setState({ isContextMenuVisible: true });\r\n  }\r\n\r\n  private _onDismiss() {\r\n    this.setState({ isContextMenuVisible: false });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}