var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
define(["require", "exports", "react", "../BaseButton", "../../../Utilities", "./CommandButton.scss"], function (require, exports, React, BaseButton_1, Utilities_1, stylesImport) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var styles = stylesImport;
    var CLASS_NAMES = {
        base: 'ms-Button',
        variant: 'ms-Button--command',
        icon: styles.icon,
        menuIcon: styles.icon,
        isDisabled: styles.isDisabled,
        isEnabled: styles.isEnabled,
        label: styles.label,
        root: styles.root,
        flexContainer: styles.flexContainer
    };
    var CommandButton = (function (_super) {
        __extends(CommandButton, _super);
        function CommandButton() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            /**
             * Tell BaseComponent to bypass resolution of componentRef.
             */
            _this._shouldUpdateComponentRef = false;
            return _this;
        }
        CommandButton.prototype.render = function () {
            return (React.createElement(BaseButton_1.BaseButton, __assign({ classNames: CLASS_NAMES, onRenderDescription: Utilities_1.nullRender }, this.props)));
        };
        return CommandButton;
    }(Utilities_1.BaseComponent));
    exports.CommandButton = CommandButton;
});

//# sourceMappingURL=CommandButton.js.map
