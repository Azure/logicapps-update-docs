import { BaseComponent } from '../../Utilities';
import { IContextualMenuProps } from '../../ContextualMenu';
import { IButtonProps, IButton } from './Button.Props';
export interface IButtonClassNames {
    base?: string;
    variant?: string;
    isDisabled?: string;
    isEnabled?: string;
    description?: string;
    flexContainer?: string;
    icon?: string;
    menuIcon?: string;
    label?: string;
    root?: string;
}
/**
 * These props are not in the Props file as they are undocumented props only specific to BaseButton.
 *
 * @export
 * @interface IBaseButtonProps
 * @extends {IButtonProps}
 */
export interface IBaseButtonProps extends IButtonProps {
    /**
     *  Custom class names for individual elements within the button DOM.
     */
    classNames?: IButtonClassNames;
}
export interface IBaseButtonState {
    menuProps?: IContextualMenuProps | null;
}
export declare class BaseButton extends BaseComponent<IBaseButtonProps, IBaseButtonState> implements IButton {
    static defaultProps: IBaseButtonProps;
    private _buttonElement;
    private _labelId;
    private _descriptionId;
    private _ariaDescriptionId;
    constructor(props: IButtonProps, rootClassName: string);
    render(): JSX.Element;
    focus(): void;
    private _onRenderContent(tag, buttonProps);
    private _onRenderIcon(buttonProps?, defaultRender?);
    private _onRenderText();
    private _onRenderChildren();
    private _onRenderDescription();
    private _onRenderAriaDescription();
    private _onRenderMenuIcon(props);
    private _onRenderMenu(menuProps);
    private _onToggleMenu();
}
