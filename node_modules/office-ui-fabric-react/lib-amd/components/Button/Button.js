var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
define(["require", "exports", "react", "../../Utilities", "./Button.Props", "./DefaultButton/DefaultButton", "./CommandButton/CommandButton", "./CompoundButton/CompoundButton", "./IconButton/IconButton", "./PrimaryButton/PrimaryButton"], function (require, exports, React, Utilities_1, Button_Props_1, DefaultButton_1, CommandButton_1, CompoundButton_1, IconButton_1, PrimaryButton_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * This class is deprecated. Use the individual *Button components instead.
     * @deprecated
     */
    var Button = (function (_super) {
        __extends(Button, _super);
        function Button(props) {
            var _this = _super.call(this, props) || this;
            /**
             * Set this BaseComponent._resolveComponentRef to false, bypassing resolution of componentRef.
             */
            _this._shouldUpdateComponentRef = false;
            Utilities_1.warn("The Button component has been deprecated. Use specific variants instead. " +
                "(PrimaryButton, DefaultButton, IconButton, CommandButton, etc.)");
            return _this;
        }
        Button.prototype.render = function () {
            var props = this.props;
            switch (props.buttonType) {
                case Button_Props_1.ButtonType.command:
                    return React.createElement(CommandButton_1.CommandButton, __assign({}, props));
                case Button_Props_1.ButtonType.compound:
                    return React.createElement(CompoundButton_1.CompoundButton, __assign({}, props));
                case Button_Props_1.ButtonType.icon:
                    return React.createElement(IconButton_1.IconButton, __assign({}, props));
                case Button_Props_1.ButtonType.primary:
                    return React.createElement(PrimaryButton_1.PrimaryButton, __assign({}, props));
                default:
                    return React.createElement(DefaultButton_1.DefaultButton, __assign({}, props));
            }
        };
        return Button;
    }(Utilities_1.BaseComponent));
    exports.Button = Button;
});

//# sourceMappingURL=Button.js.map
