var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "office-ui-fabric-react/lib/Button"], function (require, exports, React, Button_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ButtonContextualMenuExample = (function (_super) {
        __extends(ButtonContextualMenuExample, _super);
        function ButtonContextualMenuExample() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ButtonContextualMenuExample.prototype.render = function () {
            var disabled = this.props.disabled;
            return (React.createElement("div", { className: 'ms-ContextualMenuButtonsExample' },
                React.createElement("div", null,
                    React.createElement(Button_1.DefaultButton, { "data-automation-id": 'test', disabled: disabled, iconProps: { iconName: 'Add' }, text: 'New', menuProps: {
                            items: [
                                {
                                    key: 'emailMessage',
                                    name: 'Email message',
                                    icon: 'Mail'
                                },
                                {
                                    key: 'calendarEvent',
                                    name: 'Calendar event',
                                    icon: 'Calendar'
                                }
                            ]
                        } }))));
        };
        return ButtonContextualMenuExample;
    }(React.Component));
    exports.ButtonContextualMenuExample = ButtonContextualMenuExample;
});

//# sourceMappingURL=Button.ContextualMenu.Example.js.map
