{"version":3,"sources":["components/Theme/ThemePage.tsx"],"names":[],"mappings":"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","file":"components/Theme/ThemePage.js","sourcesContent":["import * as React from 'react';\r\nimport { loadTheme, ITheme } from '@microsoft/load-themed-styles';\r\nimport { Highlight } from '@uifabric/example-app-base';\r\nimport { defaultTheme } from './defaultTheme';\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { DetailsList, DetailsListLayoutMode as LayoutMode } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/Selection';\r\nimport { ColorPicker } from 'office-ui-fabric-react/lib/ColorPicker';\r\nimport './ThemePage.scss';\r\n\r\nconst ThemeCodeExample = require('!raw-loader!office-ui-fabric-react/src/components/Theme/examples/ThemeCode.Example.tsx');\r\n\r\nexport class ThemePage extends React.Component<any, any> {\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    list: DetailsList;\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._onPickerDismiss = this._onPickerDismiss.bind(this);\r\n\r\n    this.state = {\r\n      colors: Object.keys(defaultTheme).map(variableName => ({\r\n        key: variableName,\r\n        name: variableName,\r\n        value: defaultTheme[variableName],\r\n        description: '',\r\n        colorPickerProps: null\r\n      }))\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { colors, colorPickerProps } = this.state;\r\n\r\n    return (\r\n      <div className='Themes'>\r\n        <h1 className='ms-font-xxl'>Themes</h1>\r\n        <p>The entire color pallete of the controls are themeable. We provide a set of sensible defaults, but you can override all colors individually.</p>\r\n        <p>To override the themes, you need to call <span className='code'>loadTheme()</span> with the appropriate set of overrides:</p>\r\n\r\n        <Highlight className='typescript'>\r\n          { ThemeCodeExample }\r\n        </Highlight>\r\n\r\n        <h1 className='ms-font-xl'>Define a theme</h1>\r\n        <div>\r\n          <DetailsList\r\n            ref='list'\r\n            items={ colors }\r\n            selectionMode={ SelectionMode.none }\r\n            layoutMode={ LayoutMode.fixedColumns }\r\n            columns={ [\r\n              {\r\n                key: 'name',\r\n                name: 'Name',\r\n                fieldName: 'name',\r\n                minWidth: 150,\r\n                maxWidth: 150\r\n              },\r\n              {\r\n                key: 'color',\r\n                name: 'Color',\r\n                fieldName: 'value',\r\n                minWidth: 200,\r\n                onRender: (item, index) => (\r\n                  <div className='ThemePage-colorSwatch' data-is-focusable='true' onClick={ this._onSwatchClicked.bind(this, item, index) }>\r\n                    <span className='ThemePage-swatch' style={ { backgroundColor: item.value } } />\r\n                    <span className='ThemePage-colorValue'>{ item.value }</span>\r\n                  </div>\r\n                )\r\n              },\r\n              {\r\n                key: 'desc',\r\n                name: 'Description',\r\n                fieldName: 'description',\r\n                minWidth: 90\r\n              }\r\n            ] }\r\n          />\r\n\r\n          { colorPickerProps && (\r\n            <Callout\r\n              isBeakVisible={ false }\r\n              gapSpace={ 10 }\r\n              targetElement={ colorPickerProps.targetElement }\r\n              onDismiss={ this._onPickerDismiss }>\r\n\r\n              <ColorPicker\r\n                color={ colorPickerProps.value }\r\n                onColorChanged={ this._onColorChanged.bind(this, colorPickerProps.index) }\r\n              />\r\n\r\n            </Callout>\r\n          ) }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onSwatchClicked(item: any, index: number, ev: React.MouseEvent<HTMLElement>) {\r\n    this.setState({\r\n      colorPickerProps: {\r\n        targetElement: (ev.currentTarget as HTMLElement).children[0],\r\n        value: item.value,\r\n        index: index\r\n      }\r\n    });\r\n  }\r\n\r\n  private _onColorChanged(index: number, newColor: string) {\r\n    let { colors } = this.state;\r\n    let color = colors[index];\r\n    let theme: ITheme = {};\r\n\r\n    color.value = newColor;\r\n\r\n    for (let i = 0; i < colors.length; i++) {\r\n      let themeColor = colors[i];\r\n\r\n      theme[themeColor.key] = themeColor.value;\r\n    }\r\n\r\n    loadTheme(theme);\r\n\r\n    // The theme has changed values, but color state is the same. Force an update on the list.\r\n    this.refs.list.forceUpdate();\r\n  }\r\n\r\n  private _onPickerDismiss() {\r\n    this.setState({\r\n      colorPickerProps: null\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}