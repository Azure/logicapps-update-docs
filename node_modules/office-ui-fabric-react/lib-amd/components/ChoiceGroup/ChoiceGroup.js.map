{"version":3,"sources":["components/ChoiceGroup/ChoiceGroup.tsx"],"names":[],"mappings":"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","file":"components/ChoiceGroup/ChoiceGroup.js","sourcesContent":["import * as React from 'react';\r\nimport { Image } from '../../Image';\r\nimport { Label } from '../../Label';\r\nimport { Icon } from '../../Icon';\r\nimport { IChoiceGroupOption, IChoiceGroupProps } from './ChoiceGroup.Props';\r\nimport {\r\n  css,\r\n  getId,\r\n  BaseComponent\r\n} from '../../Utilities';\r\nimport * as stylesImport from './ChoiceGroup.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IChoiceGroupState {\r\n  keyChecked: string | number;\r\n\r\n  /** Is true when the control has focus. */\r\n  keyFocused?: string | number;\r\n}\r\n\r\nexport class ChoiceGroup extends BaseComponent<IChoiceGroupProps, IChoiceGroupState> {\r\n  public static defaultProps = {\r\n    options: []\r\n  };\r\n\r\n  private _id: string;\r\n  private _labelId: string;\r\n  private _inputElement: HTMLInputElement;\r\n\r\n  constructor(props: IChoiceGroupProps, ) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({ 'onChanged': 'onChange' });\r\n    this._warnMutuallyExclusive({\r\n      selectedKey: 'defaultSelectedKey'\r\n    });\r\n\r\n    this.state = {\r\n      keyChecked: (props.defaultSelectedKey === undefined) ?\r\n        this._getKeyChecked(props) :\r\n        props.defaultSelectedKey,\r\n      keyFocused: undefined\r\n    };\r\n\r\n    this._id = getId('ChoiceGroup');\r\n    this._labelId = getId('ChoiceGroupLabel');\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IChoiceGroupProps) {\r\n    const newKeyChecked = this._getKeyChecked(newProps);\r\n    const oldKeyCheched = this._getKeyChecked(this.props);\r\n\r\n    if (newKeyChecked !== oldKeyCheched) {\r\n      this.setState({\r\n        keyChecked: newKeyChecked,\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { label, options, className, required } = this.props;\r\n    let { keyChecked, keyFocused } = this.state;\r\n\r\n    return (\r\n      // Need to assign role application on containing div because JAWS doesnt call OnKeyDown without this role\r\n      <div role='application' className={ className }>\r\n        <div\r\n          className={ css('ms-ChoiceFieldGroup', styles.root) }\r\n          role='radiogroup'\r\n          aria-labelledby={ this.props.label ? this._id + '-label' : '' }\r\n        >\r\n          { this.props.label && (\r\n            <Label className={ className } required={ required } id={ this._id + '-label' }>{ label }</Label>\r\n          ) }\r\n\r\n          { options.map((option) => (\r\n            <div\r\n              key={ option.key }\r\n              className={ css('ms-ChoiceField', styles.choiceField, {\r\n                ['ms-ChoiceField--image ' + styles.choiceFieldIsImage]: !!option.imageSrc,\r\n                ['ms-ChoiceField--icon ' + styles.choiceFieldIsIcon]: !!option.iconProps,\r\n                ['is-inFocus ' + styles.choiceFieldIsInFocus]: option.key === keyFocused\r\n              })\r\n              }\r\n            >\r\n              <input\r\n                ref={ (c): HTMLInputElement => this._inputElement = c }\r\n                id={ `${this._id}-${option.key}` }\r\n                className={ css('ms-ChoiceField-input', styles.input) }\r\n                type='radio'\r\n                name={ this.props.name || this._id }\r\n                disabled={ option.isDisabled || option.disabled || this.props.disabled }\r\n                checked={ option.key === keyChecked }\r\n                required={ required }\r\n                onChange={ this._onChange.bind(this, option) }\r\n                onFocus={ this._onFocus.bind(this, option) }\r\n                onBlur={ this._onBlur.bind(this, option) }\r\n                aria-labelledby={ `${this._labelId}-${option.key}` }\r\n              />\r\n              { this._renderField(option) }\r\n            </div>\r\n          )) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this._inputElement) {\r\n      this._inputElement.focus();\r\n    }\r\n  }\r\n\r\n  private _onFocus(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      keyFocused: option.key,\r\n      keyChecked: this.state.keyChecked\r\n    });\r\n  }\r\n\r\n  private _onBlur(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      keyFocused: undefined,\r\n      keyChecked: this.state.keyChecked\r\n    });\r\n  }\r\n\r\n  private _renderField(option: IChoiceGroupOption) {\r\n    const { keyChecked } = this.state;\r\n    let isDisabled = option.isDisabled || option.disabled || this.props.disabled;\r\n\r\n    return (\r\n      <label\r\n        htmlFor={ this._id + '-' + option.key }\r\n        className={ css('ms-ChoiceField-field', styles.field, {\r\n          ['ms-ChoiceField-field--image ' + styles.fieldIsImage]: !!option.imageSrc,\r\n          ['ms-ChoiceField--icon ' + styles.fieldIsIcon]: !!option.iconProps,\r\n          ['is-checked ' + styles.fieldIsChecked]: option.key === keyChecked,\r\n          ['is-disabled ' + styles.fieldIsDisabled]: isDisabled\r\n        }) }\r\n      >\r\n        {\r\n          option.imageSrc && (\r\n            <div className={ css('ms-ChoiceField-innerField', styles.innerField) }>\r\n              <div className={ css(\r\n                'ms-ChoiceField-imageWrapper',\r\n                styles.imageWrapper,\r\n                {\r\n                  ['is-hidden ' + styles.imageWrapperIsHidden]: option.key === keyChecked\r\n                }) }\r\n              >\r\n                <Image\r\n                  src={ option.imageSrc }\r\n                  width={ option.imageSize.width }\r\n                  height={ option.imageSize.height }\r\n                />\r\n              </div>\r\n              <div className={ css(\r\n                'ms-ChoiceField-imageWrapper',\r\n                styles.imageWrapper,\r\n                {\r\n                  ['is-hidden ' + styles.imageWrapperIsHidden]: option.key !== keyChecked\r\n                }) }\r\n              >\r\n                <Image\r\n                  src={ option.selectedImageSrc }\r\n                  width={ option.imageSize.width }\r\n                  height={ option.imageSize.height }\r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          option.iconProps\r\n            ? <div className={ css('ms-ChoiceField-innerField', styles.innerField) }>\r\n              <div className={ css('ms-ChoiceField-iconWrapper', styles.iconWrapper) }>\r\n                <Icon { ...option.iconProps } />\r\n              </div>\r\n            </div>\r\n            : null\r\n        }\r\n        {\r\n          option.imageSrc || option.iconProps\r\n            ? (\r\n              <div className={ css('ms-ChoiceField-labelWrapper', styles.labelWrapper) }>\r\n                <span id={ `${this._labelId}-${option.key}` } className='ms-Label'>{ option.text }</span>\r\n              </div>\r\n            ) : (\r\n              <span id={ `${this._labelId}-${option.key}` } className='ms-Label'>{ option.text }</span>\r\n            )\r\n        }\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private _onChange(option: IChoiceGroupOption, evt: React.FormEvent<HTMLInputElement>) {\r\n    let { onChanged, onChange, selectedKey } = this.props;\r\n\r\n    // Only manage state in uncontrolled scenarios.\r\n    if (selectedKey === undefined) {\r\n      this.setState({\r\n        keyChecked: option.key\r\n      });\r\n    }\r\n\r\n    // TODO: onChanged deprecated, remove else if after 07/17/2017 when onChanged has been removed.\r\n    if (onChange) {\r\n      onChange(evt, option);\r\n    } else if (onChanged) {\r\n      onChanged(option);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If all the isChecked property of options are falsy values, return undefined;\r\n   * Else return the key of the first option with the truthy isChecked property.\r\n   */\r\n  private _getKeyChecked(props: IChoiceGroupProps): string | number {\r\n    if (props.selectedKey !== undefined) {\r\n      return props.selectedKey;\r\n    }\r\n\r\n    const optionsChecked = props.options.filter((option: IChoiceGroupOption) => {\r\n      return option.isChecked || option.checked;\r\n    });\r\n\r\n    if (optionsChecked.length === 0) {\r\n      return undefined;\r\n    } else {\r\n      return optionsChecked[0].key;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}