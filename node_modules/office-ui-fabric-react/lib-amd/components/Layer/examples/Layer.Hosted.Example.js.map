{"version":3,"sources":["components/Layer/examples/Layer.Hosted.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAMA;QAAwC,sCAAyB;QAC/D;YAAA,YACE,iBAAO,SAKR;YAJC,KAAI,CAAC,KAAK,GAAG;gBACX,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,IAAI;aACf,CAAC;;QACJ,CAAC;QAEM,mCAAM,GAAb;YAAA,iBA0CC;YAzCK,IAAA,eAAmC,EAAjC,wBAAS,EAAE,sBAAQ,CAAe;YACxC,IAAI,OAAO,GAAG,CACZ,6BAAK,SAAS,EAAC,wCAAwC,qCAEjD,CACP,CAAC;YAEF,MAAM,CAAC,CACL;gBACE,oBAAC,eAAM,IACL,KAAK,EAAC,WAAW,EACjB,OAAO,EAAG,QAAQ,EAClB,SAAS,EAAG,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAApC,CAAoC,GAAK;gBAEhE,QAAQ,IAAI,CACZ,oBAAC,iBAAS,IAAC,EAAE,EAAC,YAAY,EAAC,SAAS,EAAC,yBAAyB,GAAG,CAClE;gBAED,2BAAG,EAAE,EAAC,KAAK,uUAEP;gBAEJ,oBAAC,mBAAQ,IACP,KAAK,EAAC,oEAAoE,EAC1E,OAAO,EAAG,SAAS,EACnB,QAAQ,EAAG,UAAC,EAAE,EAAE,OAAO,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAArC,CAAqC,GAAK;gBAEtE,SAAS,GAAG,CACZ,oBAAC,aAAK,IACJ,MAAM,EAAC,YAAY,EACnB,eAAe,EAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAvB,CAAuB,EAC/C,kBAAkB,EAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,IAEnD,OAAO,CACH,CACT,GAAG,OAAO;gBAEX,6BAAK,SAAS,EAAC,yBAAyB,uCAAuC,CAE3E,CACP,CAAC;QACJ,CAAC;QACH,yBAAC;IAAD,CApDA,AAoDC,CApDuC,KAAK,CAAC,SAAS,GAoDtD;IApDY,gDAAkB","file":"components/Layer/examples/Layer.Hosted.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Layer, LayerHost } from 'office-ui-fabric-react/lib/Layer';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport './Layer.Example.scss';\r\n\r\nexport class LayerHostedExample extends React.Component<any, any> {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showLayer: false,\r\n      showHost: true\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { showLayer, showHost} = this.state;\r\n    let content = (\r\n      <div className='LayerExample-content ms-u-scaleUpIn100'>\r\n        This is example layer content.\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Toggle\r\n          label='Show host'\r\n          checked={ showHost }\r\n          onChanged={ checked => this.setState({ showHost: checked }) } />\r\n\r\n        { showHost && (\r\n          <LayerHost id='layerhost1' className='LayerExample-customHost' />\r\n        ) }\r\n\r\n        <p id='foo'>\r\n          In some cases, you may need to contain layered content within an area. Create an instance of a LayerHost along with an id, and provide a hostId on the layer to render it within the specific host. (Note that it's important that you don't include children within the LayerHost. It's meant to contain Layered content only.)\r\n        </p>\r\n\r\n        <Checkbox\r\n          label='Render the box below in a Layer and target it at hostId=layerhost1'\r\n          checked={ showLayer }\r\n          onChange={ (ev, checked) => this.setState({ showLayer: checked }) } />\r\n\r\n        { showLayer ? (\r\n          <Layer\r\n            hostId='layerhost1'\r\n            onLayerDidMount={ () => console.log('didmount') }\r\n            onLayerWillUnmount={ () => console.log('willunmount') }\r\n          >\r\n            { content }\r\n          </Layer>\r\n        ) : content }\r\n\r\n        <div className='LayerExample-nonLayered'>I am normally below the content.</div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}