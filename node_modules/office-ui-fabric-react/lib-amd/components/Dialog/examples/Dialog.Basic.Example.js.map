{"version":3,"sources":["components/Dialog/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAMA;QAAwC,sCAAyB;QAE/D;YAAA,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,KAAK;aAClB,CAAC;;QACJ,CAAC;QAEM,mCAAM,GAAb;YACE,MAAM,CAAC,CACL;gBACE,oBAAC,sBAAa,IACZ,WAAW,EAAC,yBAAyB,EACrC,OAAO,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EACrC,IAAI,EAAC,aAAa,GAClB;gBACF,oBAAC,eAAM,IACL,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAC9B,IAAI,EAAG,mBAAU,CAAC,MAAM,EACxB,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EACxC,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAC,4GAA4G,EACpH,UAAU,EAAG,KAAK,EAClB,kBAAkB,EAAC,uBAAuB;oBAE1C,oBAAC,yBAAW,IACV,OAAO,EAAG;4BACR;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;6BACjB;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE,IAAI;6BACd;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,QAAQ,EAAE,IAAI;6BACf;yBACF,EACD,SAAS,EAAG,IAAI,CAAC,gBAAgB,GACjC;oBACA,IAAI,CAAC,qEAAqE;oBAC5E,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAG,IAAI,EAAC,MAAM,GAAG;wBACtE,oBAAC,sBAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAG,IAAI,EAAC,QAAQ,GAAG,CAC3D,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAEO,wCAAW,GAAnB;YACE,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC;QAEO,yCAAY,GAApB;YACE,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC;QAEO,6CAAgB,GAAxB;YACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,CAAC;QACH,yBAAC;IAAD,CAlEA,AAkEC,CAlEuC,KAAK,CAAC,SAAS,GAkEtD;IAlEY,gDAAkB","file":"components/Dialog/examples/Dialog.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport './Dialog.Basic.Example.scss';\r\n\r\nexport class DialogBasicExample extends React.Component<any, any> {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showDialog: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          description='Opens the Sample Dialog'\r\n          onClick={ this._showDialog.bind(this) }\r\n          text='Open Dialog'\r\n        />\r\n        <Dialog\r\n          isOpen={ this.state.showDialog }\r\n          type={ DialogType.normal }\r\n          onDismiss={ this._closeDialog.bind(this) }\r\n          title='All emails together'\r\n          subText='Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\r\n          isBlocking={ false }\r\n          containerClassName='ms-dialogMainOverride'\r\n        >\r\n          <ChoiceGroup\r\n            options={ [\r\n              {\r\n                key: 'A',\r\n                text: 'Option A'\r\n              },\r\n              {\r\n                key: 'B',\r\n                text: 'Option B',\r\n                checked: true\r\n              },\r\n              {\r\n                key: 'C',\r\n                text: 'Option C',\r\n                disabled: true\r\n              }\r\n            ] }\r\n            onChanged={ this._onChoiceChanged }\r\n          />\r\n          { null /** You can also include null values as the result of conditionals */ }\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={ this._closeDialog.bind(this) } text='Save' />\r\n            <DefaultButton onClick={ this._closeDialog.bind(this) } text='Cancel' />\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showDialog() {\r\n    this.setState({ showDialog: true });\r\n  }\r\n\r\n  private _closeDialog() {\r\n    this.setState({ showDialog: false });\r\n  }\r\n\r\n  private _onChoiceChanged() {\r\n    console.log('Choice option change');\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}