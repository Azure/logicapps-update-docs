{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":"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","file":"components/Dialog/Dialog.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getId\r\n} from '../../Utilities';\r\nimport { IDialogProps, DialogType } from './Dialog.Props';\r\nimport { Modal } from '../../Modal';\r\nimport { IconButton } from '../../Button';\r\nimport { DialogFooter } from './DialogFooter';\r\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport * as stylesImport from './Dialog.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IDialogState {\r\n  id?: string;\r\n}\r\n\r\n@withResponsiveMode\r\nexport class Dialog extends BaseComponent<IDialogProps, IDialogState> {\r\n\r\n  public static defaultProps: IDialogProps = {\r\n    isOpen: false,\r\n    type: DialogType.normal,\r\n    isDarkOverlay: true,\r\n    isBlocking: false,\r\n    className: '',\r\n    containerClassName: '',\r\n    contentClassName: '',\r\n    topButtonsProps: []\r\n  };\r\n\r\n  constructor(props: IDialogProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: getId('Dialog'),\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      closeButtonAriaLabel,\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isClickableOutsideFocusTrap,\r\n      isDarkOverlay,\r\n      isOpen,\r\n      onDismiss,\r\n      onDismissed,\r\n      onLayerDidMount,\r\n      onLayerMounted,\r\n      responsiveMode,\r\n      subText,\r\n      title,\r\n      type,\r\n    } = this.props;\r\n    let { id } = this.state;\r\n\r\n    let subTextContent;\r\n    const dialogClassName = css(this.props.className, {\r\n      ['ms-Dialog--lgHeader ' + styles.isLargeHeader]: type === DialogType.largeHeader,\r\n      ['ms-Dialog--close ' + styles.isClose]: type === DialogType.close,\r\n    });\r\n    const containerClassName = css(this.props.containerClassName, styles.main);\r\n    let groupings = this._groupChildren();\r\n\r\n    if (subText) {\r\n      subTextContent = <p className={ css('ms-Dialog-subText', styles.subText) } id={ id + '-subText' }>{ subText }</p>;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        className={ dialogClassName }\r\n        containerClassName={ containerClassName }\r\n        elementToFocusOnDismiss={ elementToFocusOnDismiss }\r\n        firstFocusableSelector={ firstFocusableSelector }\r\n        forceFocusInsideTrap={ forceFocusInsideTrap }\r\n        ignoreExternalFocusing={ ignoreExternalFocusing }\r\n        isBlocking={ isBlocking }\r\n        isClickableOutsideFocusTrap={ isClickableOutsideFocusTrap }\r\n        isDarkOverlay={ isDarkOverlay }\r\n        isOpen={ isOpen }\r\n        onDismiss={ onDismiss }\r\n        onDismissed={ onDismissed }\r\n        onLayerDidMount={ onLayerDidMount }\r\n        responsiveMode={ responsiveMode }\r\n        subtitleAriaId={ subText && id + '-subText' }\r\n        titleAriaId={ title && id + '-title' }\r\n      >\r\n\r\n        <div className={ css('ms-Dialog-header', styles.header) }>\r\n          <p className={ css('ms-Dialog-title', styles.title) } id={ id + '-title' } role='heading'>{ title }</p>\r\n          <div className={ css('ms-Dialog-topButton', styles.topButton) }>\r\n            { this.props.topButtonsProps.map((props) => (\r\n              <IconButton {...props} />\r\n            )) }\r\n            <IconButton\r\n              className={ css(\r\n                'ms-Dialog-button ms-Dialog-button--close',\r\n                styles.button,\r\n                { [styles.isClose]: isBlocking || type === DialogType.largeHeader }\r\n              ) }\r\n              iconProps={ { iconName: 'Cancel' } }\r\n              ariaLabel={ closeButtonAriaLabel }\r\n              onClick={ onDismiss }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={ css('ms-Dialog-inner', styles.inner) }>\r\n          <div className={ css('ms-Dialog-content', styles.content, this.props.contentClassName) }>\r\n            { subTextContent }\r\n            { groupings.contents }\r\n          </div>\r\n          { groupings.footers }\r\n        </div>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\r\n  // casing \"child as DialogFooter\" causes a problem because\r\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\r\n  private _groupChildren(): { footers: any[]; contents: any[]; } {\r\n\r\n    let groupings: { footers: any[]; contents: any[]; } = {\r\n      footers: [],\r\n      contents: []\r\n    };\r\n\r\n    React.Children.map(this.props.children, child => {\r\n      if (typeof child === 'object' && child !== null && child.type === DialogFooter) {\r\n        groupings.footers.push(child);\r\n      } else {\r\n        groupings.contents.push(child);\r\n      }\r\n    });\r\n\r\n    return groupings;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}