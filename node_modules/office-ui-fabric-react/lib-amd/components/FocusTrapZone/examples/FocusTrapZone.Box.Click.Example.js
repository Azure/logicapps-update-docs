var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "office-ui-fabric-react/lib/Button", "office-ui-fabric-react/lib/FocusTrapZone", "office-ui-fabric-react/lib/Link", "office-ui-fabric-react/lib/TextField", "office-ui-fabric-react/lib/Toggle", "./FocusTrapZone.Box.Example.scss"], function (require, exports, React, Button_1, FocusTrapZone_1, Link_1, TextField_1, Toggle_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BoxNoClickExample = (function (_super) {
        __extends(BoxNoClickExample, _super);
        function BoxNoClickExample(props) {
            var _this = _super.call(this, props) || this;
            _this.state = {
                isToggled: false,
            };
            return _this;
        }
        BoxNoClickExample.prototype.render = function () {
            var _this = this;
            var isToggled = this.state.isToggled;
            return (React.createElement("div", null,
                React.createElement(Button_1.DefaultButton, { description: 'Focuses inside the FocusTrapZone', onClick: this._onButtonClickHandler.bind(this), text: 'Go to Trap Zone' }),
                (function () {
                    if (isToggled) {
                        return (React.createElement(FocusTrapZone_1.FocusTrapZone, { isClickableOutsideFocusTrap: true, forceFocusInsideTrap: false }, _this._internalContents()));
                    }
                    else {
                        return (React.createElement("div", null, _this._internalContents()));
                    }
                })()));
        };
        BoxNoClickExample.prototype._internalContents = function () {
            var _this = this;
            var isToggled = this.state.isToggled;
            return (React.createElement("div", { className: 'ms-FocusTrapZoneBoxExample' },
                React.createElement(TextField_1.TextField, { label: 'Default TextField', placeholder: 'Input inside Focus Trap Zone', className: '' }),
                React.createElement(Link_1.Link, { href: '', className: '' }, "Hyperlink inside FocusTrapZone"),
                React.createElement("br", null),
                React.createElement("br", null),
                React.createElement(Toggle_1.Toggle, { componentRef: function (t) { return _this._toggle = t; }, checked: isToggled, onChanged: this._onFocusTrapZoneToggleChanged.bind(this), label: 'Focus Trap Zone', onText: 'On', offText: 'Off' }),
                (function () {
                    if (isToggled) {
                        return (React.createElement(Button_1.DefaultButton, { description: 'Exit Focus Trap Zone', onClick: _this._onExitButtonClickHandler.bind(_this), text: 'Exit Focus Trap Zone' }));
                    }
                })()));
        };
        BoxNoClickExample.prototype._onButtonClickHandler = function () {
            this.setState({
                isToggled: true
            });
        };
        BoxNoClickExample.prototype._onExitButtonClickHandler = function () {
            this.setState({
                isToggled: false
            });
        };
        BoxNoClickExample.prototype._onFocusTrapZoneToggleChanged = function (isToggled) {
            var _this = this;
            this.setState({
                isToggled: isToggled
            }, function () { return _this._toggle.focus(); });
        };
        return BoxNoClickExample;
    }(React.Component));
    exports.default = BoxNoClickExample;
});

//# sourceMappingURL=FocusTrapZone.Box.Click.Example.js.map
