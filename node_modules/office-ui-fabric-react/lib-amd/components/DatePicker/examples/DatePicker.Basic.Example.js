var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "office-ui-fabric-react/lib/Dropdown", "office-ui-fabric-react/lib/DatePicker"], function (require, exports, React, Dropdown_1, DatePicker_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DayPickerStrings = {
        months: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December'
        ],
        shortMonths: [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec'
        ],
        days: [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday'
        ],
        shortDays: [
            'S',
            'M',
            'T',
            'W',
            'T',
            'F',
            'S'
        ],
        goToToday: 'Go to today',
        prevMonthAriaLabel: 'Go to previous month',
        nextMonthAriaLabel: 'Go to next month',
        prevYearAriaLabel: 'Go to previous year',
        nextYearAriaLabel: 'Go to next year'
    };
    var DatePickerBasicExample = (function (_super) {
        __extends(DatePickerBasicExample, _super);
        function DatePickerBasicExample() {
            var _this = _super.call(this) || this;
            _this.state = {
                firstDayOfWeek: DatePicker_1.DayOfWeek.Sunday
            };
            return _this;
        }
        DatePickerBasicExample.prototype.render = function () {
            var firstDayOfWeek = this.state.firstDayOfWeek;
            return (React.createElement("div", null,
                React.createElement(DatePicker_1.DatePicker, { firstDayOfWeek: firstDayOfWeek, strings: DayPickerStrings, placeholder: 'Select a date...' }),
                React.createElement(Dropdown_1.Dropdown, { label: 'Select the first day of the week', options: [
                        {
                            text: 'Sunday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Sunday]
                        },
                        {
                            text: 'Monday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Monday]
                        },
                        {
                            text: 'Tuesday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Tuesday]
                        },
                        {
                            text: 'Wednesday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Wednesday]
                        },
                        {
                            text: 'Thursday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Thursday]
                        },
                        {
                            text: 'Friday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Friday]
                        },
                        {
                            text: 'Saturday',
                            key: DatePicker_1.DayOfWeek[DatePicker_1.DayOfWeek.Saturday]
                        }
                    ], selectedKey: DatePicker_1.DayOfWeek[firstDayOfWeek], onChanged: this._onDropdownChanged.bind(this) })));
        };
        DatePickerBasicExample.prototype._onDropdownChanged = function (option) {
            this.setState({
                firstDayOfWeek: DatePicker_1.DayOfWeek[option.key]
            });
        };
        return DatePickerBasicExample;
    }(React.Component));
    exports.DatePickerBasicExample = DatePickerBasicExample;
});

//# sourceMappingURL=DatePicker.Basic.Example.js.map
