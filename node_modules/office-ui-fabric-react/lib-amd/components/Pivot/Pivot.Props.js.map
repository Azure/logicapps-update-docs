{"version":3,"sources":["components/Pivot/Pivot.Props.ts"],"names":[],"mappings":";;;IAkEA,IAAY,eAUX;IAVD,WAAY,eAAe;QACzB;;WAEG;QACH,uDAAS,CAAA;QAET;;WAEG;QACH,qDAAQ,CAAA;IACV,CAAC,EAVW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAU1B;IAED,IAAY,aAWX;IAXD,WAAY,aAAa;QAEvB;;WAEG;QACH,qDAAU,CAAA;QAEV;;WAEG;QACH,mDAAS,CAAA;IACX,CAAC,EAXW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAWxB","file":"components/Pivot/Pivot.Props.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport { Pivot } from './Pivot';\r\nimport { PivotItem } from './PivotItem';\r\n\r\nexport interface IPivot {\r\n\r\n}\r\n\r\nexport interface IPivotProps extends React.Props<Pivot> {\r\n  /**\r\n   * Optional callback to access the IPivot interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: (component: IPivot) => void;\r\n\r\n  /**\r\n   * The index of the pivot item initially selected.\r\n   *\r\n   * It only works when initialSelectedKey is not defined. You must not use them together.\r\n   */\r\n  initialSelectedIndex?: number;\r\n\r\n  /**\r\n   * The key of the pivot item initially selected.\r\n   *\r\n   * It will make initialSelectedIndex not work. You must not use them together.\r\n   */\r\n  initialSelectedKey?: string;\r\n\r\n  /**\r\n   * The key of the selected pivot item.\r\n   *\r\n   * If set, this will override the Pivot's selected item state.\r\n   */\r\n  selectedKey?: string;\r\n\r\n  /**\r\n   * Callback issued when the selected pivot item is changed\r\n   */\r\n  onLinkClick?: (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => void;\r\n\r\n  /**\r\n   * Specify the PivotLinkSize to use (normal, large)\r\n   */\r\n  linkSize?: PivotLinkSize;\r\n\r\n  /**\r\n   * Specify the PivotLinkFormat to use (links, tabs)\r\n   */\r\n  linkFormat?: PivotLinkFormat;\r\n\r\n  /**\r\n   * Specify whether to skip rendering the tabpanel with the content of the selected tab.\r\n   * Use this prop if you plan to separately render the tab content\r\n   * and don't want to leave an empty tabpanel in the page that may confuse Screen Readers.\r\n   */\r\n  headersOnly?: boolean;\r\n\r\n  /**\r\n   * Optional. Specify how IDs are generated for each tab header.\r\n   * Useful if you're rendering content outside and need to connect aria-labelledby.\r\n   */\r\n  getTabId?: (itemKey: string, index: number) => string;\r\n}\r\n\r\nexport enum PivotLinkFormat {\r\n  /**\r\n   * Display Pivot Links as links\r\n   */\r\n  links = 0,\r\n\r\n  /**\r\n   * Display Pivot Links as Tabs\r\n   */\r\n  tabs = 1\r\n}\r\n\r\nexport enum PivotLinkSize {\r\n\r\n  /**\r\n   * Display Link using normal font size\r\n   */\r\n  normal = 0,\r\n\r\n  /**\r\n   * Display links using large font size\r\n   */\r\n  large = 1\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}