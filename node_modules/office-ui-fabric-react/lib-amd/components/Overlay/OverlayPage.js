var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "@uifabric/example-app-base", "./examples/Overlay.Dark.Example", "./examples/Overlay.Light.Example"], function (require, exports, React, example_app_base_1, Overlay_Dark_Example_1, Overlay_Light_Example_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var OverlayLightExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Light.Example.tsx');
    var OverlayDarkExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Dark.Example.tsx');
    var OverlayPage = (function (_super) {
        __extends(OverlayPage, _super);
        function OverlayPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        OverlayPage.prototype.render = function () {
            return (React.createElement(example_app_base_1.ComponentPage, { title: 'Overlay', componentName: 'OverlayExample', exampleCards: React.createElement("div", null,
                    React.createElement(example_app_base_1.ExampleCard, { title: 'Light', code: OverlayLightExampleCode },
                        React.createElement(Overlay_Light_Example_1.OverlayLightExample, null)),
                    React.createElement(example_app_base_1.ExampleCard, { title: 'Dark', code: OverlayDarkExampleCode },
                        React.createElement(Overlay_Dark_Example_1.OverlayDarkExample, null))), propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                        require('!raw-loader!office-ui-fabric-react/src/components/Overlay/Overlay.Props.ts')
                    ] }), overview: React.createElement("div", null,
                    React.createElement("p", null, "Overlays are used to render a semi-transparent layer on top of existing UI. Overlays help focus the user on the content that sits above the added layer and are often used to help designate a modal or blocking experience. Overlays can be seen used in conjunction with Panels and Dialogs.")), bestPractices: React.createElement("div", null), dos: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use a dark Overlay with a first-run experience."),
                        React.createElement("li", null, "Use a white Overlay for dialogs and panels."))), donts: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use an Overlay when you want the user to interact with the UI that is being covered."))), related: React.createElement("a", { href: 'https://dev.office.com/fabric-js/Components/Overlay/Overlay.html' }, "Fabric JS"), isHeaderVisible: this.props.isHeaderVisible }));
        };
        return OverlayPage;
    }(React.Component));
    exports.OverlayPage = OverlayPage;
});

//# sourceMappingURL=OverlayPage.js.map
