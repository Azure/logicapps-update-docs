var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "@uifabric/example-app-base", "./examples/Icon.Basic.Example", "./examples/Icon.Color.Example", "./examples/Icon.ImageSheet.Example"], function (require, exports, React, example_app_base_1, Icon_Basic_Example_1, Icon_Color_Example_1, Icon_ImageSheet_Example_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var IconBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Basic.Example.tsx');
    var IconColorExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Color.Example.tsx');
    var IconImageSheetExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.ImageSheet.Example.tsx');
    var IconPage = (function (_super) {
        __extends(IconPage, _super);
        function IconPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        IconPage.prototype.render = function () {
            return (React.createElement(example_app_base_1.ComponentPage, { title: 'Icon', componentName: 'IconExample', exampleCards: React.createElement("div", null,
                    React.createElement(example_app_base_1.ExampleCard, { title: 'Icon', code: IconBasicExampleCode },
                        React.createElement(Icon_Basic_Example_1.IconBasicExample, null)),
                    React.createElement(example_app_base_1.ExampleCard, { title: 'Icon with custom color', code: IconColorExampleCode },
                        React.createElement(Icon_Color_Example_1.IconColorExample, null)),
                    React.createElement(example_app_base_1.ExampleCard, { title: 'Icon using image sheet', code: IconImageSheetExampleCode },
                        React.createElement(Icon_ImageSheet_Example_1.IconImageSheetExample, null))), propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                        require('!raw-loader!office-ui-fabric-react/src/components/Icon/Icon.Props.ts')
                    ] }), overview: React.createElement("div", null,
                    React.createElement("p", null, "In a computer's graphical user interface ( GUI ), an icon is an image that represents an application, a capability, or some other concept or specific entity with meaning for the user. An icon is usually selectable but can also be a nonselectable image such as a company's logo.")), bestPractices: React.createElement("div", null), dos: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Adjust to proper size to highlight importance but not occupying too much space."),
                        React.createElement("li", null, "Be simple and concise."))), donts: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use Icons to show pictures."),
                        React.createElement("li", null, "Use photos or long sentences as icons."))), isHeaderVisible: this.props.isHeaderVisible }));
        };
        return IconPage;
    }(React.Component));
    exports.IconPage = IconPage;
});

//# sourceMappingURL=IconPage.js.map
