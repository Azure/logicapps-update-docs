{"version":3,"sources":["components/Calendar/Calendar.Props.ts"],"names":[],"mappings":";;;IAIS,oBAFA,sBAAS,CAEA;IAAE,wBAFA,0BAAa,CAEA","file":"components/Calendar/Calendar.Props.js","sourcesContent":["import * as React from 'react';\r\nimport { Calendar } from './Calendar';\r\nimport { DayOfWeek, DateRangeType } from '../../utilities/dateValues/DateValues';\r\n\r\nexport { DayOfWeek, DateRangeType }\r\n\r\nexport interface ICalendar {\r\n  /** Sets focus to the selected date. */\r\n  focus: () => void;\r\n}\r\n\r\nexport interface ICalendarProps extends React.Props<Calendar> {\r\n  /**\r\n   * Optional callback to access the ICalendar interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: (component: ICalendar) => void;\r\n\r\n  /**\r\n  * Callback issued when a date is selected\r\n  * @param date - The date the user selected\r\n  * @param selectedDateRangeArray - The resultant list of dates that are selected based on the date range type set for the component.\r\n  */\r\n  onSelectDate?: (date: Date, selectedDateRangeArray?: Date[]) => void;\r\n\r\n  /**\r\n   * Callback issued when calendar is closed\r\n   */\r\n  onDismiss?: () => void;\r\n\r\n  /**\r\n   * Whether the month picker is shown beside the day picker or hidden.\r\n   * @defaultvalue true\r\n   */\r\n  isMonthPickerVisible?: boolean;\r\n\r\n  /**\r\n   * Default value of the Calendar, if any\r\n   */\r\n  value?: Date;\r\n\r\n  /**\r\n   * The first day of the week for your locale.\r\n   * @defaultvalue DayOfWeek.Sunday\r\n   */\r\n  firstDayOfWeek?: DayOfWeek;\r\n\r\n  /**\r\n   * The date range type indicating how  many days should be selected as the user\r\n   * selects days\r\n   * @defaultValue DateRangeType.Day\r\n   */\r\n  dateRangeType?: DateRangeType;\r\n\r\n  /**\r\n   * Whether the month view should automatically navigate to the next or previous date range\r\n   * depending on the selected date. If this property is set to true and the currently displayed\r\n   * month is March 2017, if the user clicks on a day outside the month, i.e., April 1st, the\r\n   * picker will automatically navigate to the month of April.\r\n   * @defaultValue false\r\n   */\r\n  autoNavigateOnSelection?: boolean;\r\n\r\n  /**\r\n   * Whether the \"Go to today\" link should be shown or not\r\n   */\r\n  showGoToToday?: boolean;\r\n\r\n  /**\r\n   * This property has been removed at 0.80.0 in place of the focus method, to be removed @ 1.0.0.\r\n   * @deprecated\r\n   */\r\n  shouldFocusOnMount?: boolean;\r\n\r\n  /**\r\n   * Localized strings to use in the Calendar\r\n   */\r\n  strings: ICalendarStrings;\r\n}\r\n\r\nexport interface ICalendarStrings {\r\n  /**\r\n   * An array of strings for the full names of months.\r\n   * The array is 0-based, so months[0] should be the full name of January.\r\n   */\r\n  months: string[];\r\n\r\n  /**\r\n   * An array of strings for the short names of months.\r\n   * The array is 0-based, so shortMonths[0] should be the short name of January.\r\n   */\r\n  shortMonths: string[];\r\n\r\n  /**\r\n   * An array of strings for the full names of days of the week.\r\n   * The array is 0-based, so days[0] should be the full name of Sunday.\r\n   */\r\n  days: string[];\r\n\r\n  /**\r\n   * An array of strings for the initials of the days of the week.\r\n   * The array is 0-based, so days[0] should be the initial of Sunday.\r\n   */\r\n  shortDays: string[];\r\n\r\n  /**\r\n   * String to render for button to direct the user to today's date.\r\n   */\r\n  goToToday: string;\r\n\r\n  /**\r\n   * Aria-label for the \"previous month\" button.\r\n   */\r\n  prevMonthAriaLabel?: string;\r\n\r\n  /**\r\n   * Aria-label for the \"next month\" button.\r\n   */\r\n  nextMonthAriaLabel?: string;\r\n\r\n  /**\r\n   * Aria-label for the \"previous year\" button.\r\n   */\r\n  prevYearAriaLabel?: string;\r\n\r\n  /**\r\n   * Aria-label for the \"next year\" button.\r\n   */\r\n  nextYearAriaLabel?: string;\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}