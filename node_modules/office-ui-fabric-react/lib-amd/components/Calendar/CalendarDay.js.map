{"version":3,"sources":["components/Calendar/CalendarDay.tsx"],"names":[],"mappings":"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","file":"components/Calendar/CalendarDay.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  autobind,\r\n  css,\r\n  getId,\r\n  getRTL,\r\n  getRTLSafeKeyCode\r\n} from '../../Utilities';\r\nimport { ICalendarStrings } from './Calendar.Props';\r\nimport { DayOfWeek, DateRangeType } from '../../utilities/dateValues/DateValues';\r\nimport { FocusZone } from '../../FocusZone';\r\n\r\nimport {\r\n  addDays,\r\n  addWeeks,\r\n  addMonths,\r\n  compareDates,\r\n  compareDatePart,\r\n  getDateRangeArray,\r\n  isInDateRangeArray\r\n} from '../../utilities/dateMath/DateMath';\r\n\r\nimport * as stylesImport from './Calendar.scss';\r\nconst styles: any = stylesImport;\r\n\r\nconst DAYS_IN_WEEK = 7;\r\n\r\nexport interface IDayInfo {\r\n  key: string;\r\n  date: string;\r\n  originalDate: Date;\r\n  isInMonth: boolean;\r\n  isToday: boolean;\r\n  isSelected: boolean;\r\n  onSelected: () => void;\r\n}\r\n\r\nexport interface ICalendarDayProps {\r\n  strings: ICalendarStrings;\r\n  selectedDate: Date;\r\n  navigatedDate: Date;\r\n  onSelectDate: (date: Date, selectedDateRangeArray?: Date[]) => void;\r\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\r\n  onDismiss?: () => void;\r\n  firstDayOfWeek: DayOfWeek;\r\n  dateRangeType: DateRangeType;\r\n  autoNavigateOnSelection: boolean;\r\n}\r\n\r\nexport interface ICalendarDayState {\r\n  activeDescendantId?: string;\r\n  weeks?: IDayInfo[][];\r\n}\r\n\r\nexport class CalendarDay extends BaseComponent<ICalendarDayProps, ICalendarDayState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    navigatedDay: HTMLElement;\r\n  };\r\n\r\n  public constructor(props: ICalendarDayProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeDescendantId: getId('DatePickerDay-active'),\r\n      weeks: this._getWeeks(props.navigatedDate, props.selectedDate)\r\n    };\r\n\r\n    this._onSelectNextMonth = this._onSelectNextMonth.bind(this);\r\n    this._onSelectPrevMonth = this._onSelectPrevMonth.bind(this);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarDayProps) {\r\n    this.setState({\r\n      weeks: this._getWeeks(nextProps.navigatedDate, nextProps.selectedDate)\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let { activeDescendantId, weeks } = this.state;\r\n    let { firstDayOfWeek, strings, navigatedDate, onSelectDate } = this.props;\r\n    let dayPickerId = getId('DatePickerDay-dayPicker');\r\n    let monthAndYearId = getId('DatePickerDay-monthAndYear');\r\n\r\n    return (\r\n      <div className={ css('ms-DatePicker-dayPicker', styles.dayPicker) } id={ dayPickerId }>\r\n        <div className={ css('ms-DatePicker-header', styles.header) }>\r\n          <div aria-live='polite' aria-relevant='text' aria-atomic='true' id={ monthAndYearId }>\r\n            <div className={ css('ms-DatePicker-month', styles.month) }>{ strings.months[navigatedDate.getMonth()] }</div>\r\n            <div className={ css('ms-DatePicker-year', styles.year) }>{ navigatedDate.getFullYear() }</div>\r\n          </div>\r\n        </div>\r\n        <div className={ css('ms-DatePicker-monthComponents', styles.monthComponents) }>\r\n          <div className={ css('ms-DatePicker-navContainer', styles.navContainer) }>\r\n            <span\r\n              className={ css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth) }\r\n              onClick={ this._onSelectPrevMonth }\r\n              onKeyDown={ this._onPrevMonthKeyDown }\r\n              aria-controls={ dayPickerId }\r\n              aria-label={ strings.prevMonthAriaLabel }\r\n              role='button'\r\n              tabIndex={ 0 }>\r\n              <i className={ css('ms-Icon', { 'ms-Icon--ChevronLeft': !getRTL(), 'ms-Icon--ChevronRight': getRTL() }) } />\r\n            </span >\r\n            <span\r\n              className={ css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth) }\r\n              onClick={ this._onSelectNextMonth }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectNextMonth) }\r\n              aria-controls={ dayPickerId }\r\n              aria-label={ strings.nextMonthAriaLabel }\r\n              role='button'\r\n              tabIndex={ 0 }>\r\n              <i className={ css('ms-Icon', { 'ms-Icon--ChevronLeft': getRTL(), 'ms-Icon--ChevronRight': !getRTL() }) } />\r\n            </span >\r\n          </div >\r\n          <div className={ css('ms-DatePicker-headerToggleView js-showMonthPicker', styles.headerToggleView) } />\r\n        </div >\r\n        <FocusZone>\r\n          <table\r\n            className={ css('ms-DatePicker-table', styles.table) }\r\n            role='grid'\r\n            aria-readonly='true'\r\n            aria-multiselectable='false'\r\n            aria-labelledby={ monthAndYearId }\r\n            aria-activedescendant={ activeDescendantId }\r\n          >\r\n            <thead>\r\n              <tr>\r\n                { strings.shortDays.map((val, index) =>\r\n                  <th\r\n                    className={ css('ms-DatePicker-weekday', styles.weekday) }\r\n                    scope='col'\r\n                    key={ index }\r\n                    title={ strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK] }\r\n                  >\r\n                    { strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK] }\r\n                  </th>) }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { weeks.map((week, weekIndex) =>\r\n                <tr key={ weekIndex }>\r\n                  { week.map((day, dayIndex) =>\r\n                    <td role='presentation' key={ day.key }>\r\n                      <div\r\n                        className={ css(\r\n                          'ms-DatePicker-day',\r\n                          styles.day,\r\n                          {\r\n                            ['ms-DatePicker-day--infocus ' + styles.dayIsFocused]: day.isInMonth,\r\n                            ['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused]: !day.isInMonth,\r\n                            ['ms-DatePicker-day--today ' + styles.dayIsToday]: day.isToday,\r\n                            ['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted]: day.isSelected\r\n                          }) }\r\n                        role='gridcell'\r\n                        onClick={ day.onSelected }\r\n                        onKeyDown={ (ev: React.KeyboardEvent<HTMLElement>) =>\r\n                          this._navigateMonthEdge(ev, day.originalDate, weekIndex, dayIndex) }\r\n                        aria-selected={ day.isSelected }\r\n                        aria-label={ day.originalDate.toLocaleDateString ? day.originalDate.toLocaleDateString() : day.originalDate.getDate() }\r\n                        id={ compareDates(navigatedDate, day.originalDate) ? activeDescendantId : null }\r\n                        data-is-focusable={ true }\r\n                        ref={ compareDates(navigatedDate, day.originalDate) ? 'navigatedDay' : null }\r\n                        key={ compareDates(navigatedDate, day.originalDate) ? 'navigatedDay' : null } >\r\n                        { day.date }\r\n                      </div>\r\n                    </td>\r\n                  ) }\r\n                </tr>\r\n              ) }\r\n            </tbody>\r\n          </table>\r\n        </FocusZone>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.navigatedDay) {\r\n      this.refs.navigatedDay.tabIndex = 0;\r\n      this.refs.navigatedDay.focus();\r\n    }\r\n  }\r\n\r\n  private _navigateMonthEdge(ev: React.KeyboardEvent<HTMLElement>, date: Date, weekIndex: number, dayIndex: number) {\r\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\r\n      this.props.onNavigateDate(addWeeks(date, -1), true);\r\n      ev.preventDefault();\r\n    } else if (weekIndex === (this.state.weeks.length - 1) && ev.which === KeyCodes.down) {\r\n      this.props.onNavigateDate(addWeeks(date, 1), true);\r\n      ev.preventDefault();\r\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\r\n      this.props.onNavigateDate(addDays(date, -1), true);\r\n      ev.preventDefault();\r\n    } else if (dayIndex === (DAYS_IN_WEEK - 1) && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\r\n      this.props.onNavigateDate(addDays(date, 1), true);\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _onKeyDown(callback: () => void, ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private _onSelectDate(selectedDate: Date) {\r\n    let { onSelectDate, dateRangeType, firstDayOfWeek, navigatedDate, autoNavigateOnSelection } = this.props;\r\n\r\n    let dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek);\r\n    if (onSelectDate != null) {\r\n      onSelectDate(selectedDate, dateRange);\r\n    }\r\n\r\n    // Navigate to next or previous month if needed\r\n    if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\r\n      let compareResult = compareDatePart(selectedDate, navigatedDate);\r\n      if (compareResult < 0) {\r\n        this._onSelectPrevMonth();\r\n      } else if (compareResult > 0) {\r\n        this._onSelectNextMonth();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onSelectNextMonth() {\r\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, 1), false);\r\n  }\r\n\r\n  private _onSelectPrevMonth() {\r\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, -1), false);\r\n  }\r\n\r\n  @autobind\r\n  private _onPrevMonthKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.tab && ev.shiftKey) {\r\n      if (this.props.onDismiss) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.props.onDismiss();\r\n      }\r\n    } else {\r\n      this._onKeyDown(this._onSelectPrevMonth, ev);\r\n    }\r\n  }\r\n\r\n  private _getWeeks(navigatedDate: Date, selectedDate: Date): IDayInfo[][] {\r\n    let { firstDayOfWeek, dateRangeType } = this.props;\r\n    let date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\r\n    let today = new Date();\r\n    let weeks = [];\r\n    let week;\r\n\r\n    // Cycle the date backwards to get to the first day of the week.\r\n    while (date.getDay() !== firstDayOfWeek) {\r\n      date.setDate(date.getDate() - 1);\r\n    }\r\n\r\n    // a flag to indicate whether all days of the week are in the month\r\n    let isAllDaysOfWeekOutOfMonth = false;\r\n\r\n    let selectedDates = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek);\r\n\r\n    for (let weekIndex = 0; !isAllDaysOfWeekOutOfMonth; weekIndex++) {\r\n      week = [];\r\n\r\n      isAllDaysOfWeekOutOfMonth = true;\r\n\r\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\r\n        let originalDate = new Date(date.toString());\r\n        let dayInfo = {\r\n          key: date.toString(),\r\n          date: date.getDate(),\r\n          originalDate: originalDate,\r\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\r\n          isToday: compareDates(today, date),\r\n          isSelected: isInDateRangeArray(date, selectedDates),\r\n          onSelected: this._onSelectDate.bind(this, originalDate)\r\n        };\r\n\r\n        week.push(dayInfo);\r\n\r\n        if (dayInfo.isInMonth) {\r\n          isAllDaysOfWeekOutOfMonth = false;\r\n        }\r\n\r\n        date.setDate(date.getDate() + 1);\r\n      }\r\n\r\n      if (!isAllDaysOfWeekOutOfMonth) {\r\n        weeks.push(week);\r\n      }\r\n    }\r\n\r\n    return weeks;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}