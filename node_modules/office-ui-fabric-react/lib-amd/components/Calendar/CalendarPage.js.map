{"version":3,"sources":["components/Calendar/CalendarPage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAWA,IAAM,yBAAyB,GAAG,OAAO,CAAC,iGAAiG,CAAW,CAAC;IACvJ,IAAM,yBAAyB,GAAG,OAAO,CAAC,iGAAiG,CAAW,CAAC;IAEvJ;QAAkC,gCAA6C;QAA/E;;QAwEA,CAAC;QAvEQ,6BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV;oBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAG,yBAAyB;wBACnE,oBAAC,+CAAqB,IAAC,oBAAoB,EAAG,KAAK,EAAG,aAAa,EAAG,wBAAa,CAAC,GAAG,EAAG,uBAAuB,EAAG,KAAK,EACvH,aAAa,EAAG,KAAK,GAAK,CAChB;oBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,mCAAmC,EAAC,IAAI,EAAG,yBAAyB;wBACrF,oBAAC,+CAAqB,IAAC,oBAAoB,EAAG,IAAI,EAAG,aAAa,EAAG,wBAAa,CAAC,GAAG,EAAG,uBAAuB,EAAG,KAAK,EACtH,aAAa,EAAG,IAAI,GAAK,CACf;oBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,qCAAqC,EAAC,IAAI,EAAG,yBAAyB;wBACvF,oBAAC,+CAAqB,IAAC,oBAAoB,EAAG,IAAI,EAAG,aAAa,EAAG,wBAAa,CAAC,IAAI,EAAG,uBAAuB,EAAG,IAAI,EACtH,aAAa,EAAG,IAAI,EAAG,mBAAmB,EAAG,IAAI,GAAK,CAC5C;oBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,sCAAsC,EAAC,IAAI,EAAG,yBAAyB;wBACxF,oBAAC,+CAAqB,IAAC,oBAAoB,EAAG,IAAI,EAAG,aAAa,EAAG,wBAAa,CAAC,KAAK,EAAG,uBAAuB,EAAG,IAAI,EACvH,aAAa,EAAG,IAAI,EAAG,mBAAmB,EAAG,IAAI,GAAK,CAC5C;oBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,iCAAiC,EAAC,IAAI,EAAG,yBAAyB;wBACnF,oBAAC,+CAAqB,OAAG,CACb,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;wBACR,OAAO,CAAS,8EAA8E,CAAC;qBAChG,GACD,EAEJ,QAAQ,EACN;oBACE,0HAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;oBACE;wBACE,sEAA4C;wBAC5C,6JAAmI;wBACnI,oKAA0I;wBAC1I,uMAAwK;wBACxK,sKAA4I,CACzI,CACD,EAER,KAAK,EACH;oBACE;wBACE,yKAA+I;wBAC/I,wFAA8D;wBAC9D,+GAAqF;wBACrF,yHAA+F,CAC5F,CACD,EAER,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;QACJ,CAAC;QAEH,mBAAC;IAAD,CAxEA,AAwEC,CAxEiC,KAAK,CAAC,SAAS,GAwEhD;IAxEY,oCAAY","file":"components/Calendar/CalendarPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ComponentPage,\r\n  ExampleCard,\r\n  IComponentDemoPageProps,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport { DateRangeType } from 'office-ui-fabric-react/lib/Calendar';\r\nimport { CalendarButtonExample } from './examples/Calendar.Button.Example';\r\nimport { CalendarInlineExample } from './examples/Calendar.Inline.Example';\r\n\r\nconst CalendarButtonExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Button.Example.tsx') as string;\r\nconst CalendarInlineExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Inline.Example.tsx') as string;\r\n\r\nexport class CalendarPage extends React.Component<IComponentDemoPageProps, any> {\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Calendar'\r\n        componentName='CalendarExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Inline Calendar' code={ CalendarInlineExampleCode }>\r\n              <CalendarInlineExample isMonthPickerVisible={ false } dateRangeType={ DateRangeType.Day } autoNavigateOnSelection={ false }\r\n                showGoToToday={ false } />\r\n            </ExampleCard>\r\n            <ExampleCard title='Inline Calendar with month picker' code={ CalendarInlineExampleCode }>\r\n              <CalendarInlineExample isMonthPickerVisible={ true } dateRangeType={ DateRangeType.Day } autoNavigateOnSelection={ false }\r\n                showGoToToday={ true } />\r\n            </ExampleCard>\r\n            <ExampleCard title='Inline Calendar with week selection' code={ CalendarInlineExampleCode }>\r\n              <CalendarInlineExample isMonthPickerVisible={ true } dateRangeType={ DateRangeType.Week } autoNavigateOnSelection={ true }\r\n                showGoToToday={ true } showNavigateButtons={ true } />\r\n            </ExampleCard>\r\n            <ExampleCard title='Inline Calendar with month selection' code={ CalendarInlineExampleCode }>\r\n              <CalendarInlineExample isMonthPickerVisible={ true } dateRangeType={ DateRangeType.Month } autoNavigateOnSelection={ true }\r\n                showGoToToday={ true } showNavigateButtons={ true } />\r\n            </ExampleCard>\r\n            <ExampleCard title='Calendar launched from a button' code={ CalendarButtonExampleCode }>\r\n              <CalendarButtonExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/Calendar.Props.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The calendar component allows a user to browse through a calendar and pick a date value.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use the control as a single entity.</li>\r\n              <li>Set the default date to the current date unless a specific date is required for context (e.g. the date of the conference).</li>\r\n              <li>The control is designed to resize relative to available screen width. Allow it to render in either wide or narrow as appropriate.</li>\r\n              <li>When the control is engaged, the Calendar renders as a flyout and has defined widths (300px -narrow and 440px â€“ wide). Plan your UI implementation accordingly.</li>\r\n              <li>The control renders date in a specific format. If allowing for manual entry of date, provide helper text in the appropriate format.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Don't attempt to break apart year from month/day selectors. If granularity is required, use the Dropdown control or something similar.</li>\r\n              <li>Don't attempt to force resize the control in any way.</li>\r\n              <li>Don't force the control to render one mode vs. the other (year or month/day)</li>\r\n              <li>The flyout selector is a light dismiss control. Don't modify this behavior in any way.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}