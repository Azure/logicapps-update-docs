var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "../../Utilities", "./DetailsRow.scss"], function (require, exports, React, Utilities_1, stylesImport) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var styles = stylesImport;
    var DetailsRowFields = (function (_super) {
        __extends(DetailsRowFields, _super);
        function DetailsRowFields(props) {
            var _this = _super.call(this) || this;
            _this.state = _this._getState(props);
            return _this;
        }
        DetailsRowFields.prototype.componentWillReceiveProps = function (newProps) {
            this.setState(this._getState(newProps));
        };
        DetailsRowFields.prototype.render = function () {
            var columns = this.props.columns;
            var cellContent = this.state.cellContent;
            return (React.createElement("div", { className: Utilities_1.css('ms-DetailsRow-fields', styles.fields), "data-automationid": 'DetailsRowFields' }, columns.map(function (column, columnIndex) {
                return (React.createElement("div", { key: columnIndex, role: column.isRowHeader ? 'rowheader' : 'gridcell', className: Utilities_1.css('ms-DetailsRow-cell', styles.cell, column.className, (_a = {
                            'is-multiline': column.isMultiline
                        },
                        _a[styles.isMultiline] = column.isMultiline,
                        _a)), style: { width: column.calculatedWidth }, "data-automationid": 'DetailsRowCell', "data-automation-key": column.key }, cellContent[columnIndex]));
                var _a;
            })));
        };
        DetailsRowFields.prototype._getState = function (props) {
            var _this = this;
            var item = props.item, itemIndex = props.itemIndex, onRenderItemColumn = props.onRenderItemColumn;
            return {
                cellContent: props.columns.map(function (column) {
                    var cellContent;
                    try {
                        var render = column.onRender || onRenderItemColumn;
                        cellContent = render ? render(item, itemIndex, column) : _this._getCellText(item, column);
                    }
                    catch (e) { }
                    return cellContent;
                })
            };
        };
        DetailsRowFields.prototype._getCellText = function (item, column) {
            var value = (item && column && column.fieldName) ? item[column.fieldName] : '';
            if (value === null || value === undefined) {
                value = '';
            }
            return value;
        };
        return DetailsRowFields;
    }(Utilities_1.BaseComponent));
    exports.DetailsRowFields = DetailsRowFields;
});

//# sourceMappingURL=DetailsRowFields.js.map
