var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "office-ui-fabric-react/lib/Utilities", "office-ui-fabric-react/lib/Button", "office-ui-fabric-react/lib/Tooltip"], function (require, exports, React, Utilities_1, Button_1, Tooltip_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var TooltipOverflowExample = (function (_super) {
        __extends(TooltipOverflowExample, _super);
        function TooltipOverflowExample(props) {
            var _this = _super.call(this, props) || this;
            _this.state = {
                overflow: false
            };
            return _this;
        }
        TooltipOverflowExample.prototype.render = function () {
            var _this = this;
            return (React.createElement("div", null,
                React.createElement(Button_1.DefaultButton, { onClick: function () { return _this.setState({ overflow: !_this.state.overflow }); } }, "Toggle showing overflow"),
                React.createElement("div", { style: {
                        marginTop: '40px'
                    } },
                    React.createElement("div", { style: {
                            overflow: 'hidden',
                            textOverflow: 'ellipsis',
                            whiteSpace: this.state.overflow && 'nowrap',
                            width: this.state.overflow && '200px',
                            border: '1px solid black'
                        } },
                        React.createElement(Tooltip_1.TooltipHost, { content: 'This is the tooltip', id: 'myID', overflowMode: Tooltip_1.TooltipOverflowMode.Parent },
                            React.createElement("span", { "aria-describedby": 'myID' }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec volutpat lectus ut magna sodales, sit amet accumsan arcu accumsan. Lorem ipsum dolor sit amet, consectetur adipiscing elit."))))));
        };
        return TooltipOverflowExample;
    }(Utilities_1.BaseComponent));
    exports.TooltipOverflowExample = TooltipOverflowExample;
});

//# sourceMappingURL=Tooltip.Overflow.Example.js.map
