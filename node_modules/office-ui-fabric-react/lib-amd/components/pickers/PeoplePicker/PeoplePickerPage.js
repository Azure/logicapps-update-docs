var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "react", "office-ui-fabric-react/lib/Link", "@uifabric/example-app-base", "./examples/PeoplePicker.Types.Example"], function (require, exports, React, Link_1, example_app_base_1, PeoplePicker_Types_Example_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PeoplePickerTypesExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/pickers/PeoplePicker/examples/PeoplePicker.Types.Example.tsx');
    var PeoplePickerPage = (function (_super) {
        __extends(PeoplePickerPage, _super);
        function PeoplePickerPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        PeoplePickerPage.prototype.render = function () {
            return (React.createElement(example_app_base_1.ComponentPage, { title: 'PeoplePicker', componentName: 'PeoplePickerExample', exampleCards: React.createElement("div", null,
                    React.createElement(example_app_base_1.ExampleCard, { title: 'People Pickers', code: PeoplePickerTypesExampleCode },
                        React.createElement(PeoplePicker_Types_Example_1.PeoplePickerTypesExample, null))), propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                        require('!raw-loader!office-ui-fabric-react/src/components/pickers/BasePicker.Props.ts')
                    ] }), overview: React.createElement("div", null,
                    React.createElement(Link_1.Link, { target: '_blank', href: 'http://dev.office.com/fabric/components/PeoplePicker' }, " PeoplePicker "),
                    React.createElement("span", null, " are used to pick recipients.")), isHeaderVisible: this.props.isHeaderVisible, related: React.createElement("a", { href: 'https://dev.office.com/fabric-js/Components/PeoplePicker/PeoplePicker.html' }, "Fabric JS"), bestPractices: React.createElement("div", null, "The PeoplePicker is used to select one or more entities, such as people or groups. Entry points for PeoplePickers are typically specialized TextField-like input fields known as a \"well\", which are used to search for recipients from a list. When a recipient is selected from the list, it is added to the well as a specialized Persona that can be interacted with or removed. Clicking on a Persona from the well should invoke a PersonaCard or open a profile pane for that recipient."), dos: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use the PeoplePicker to quickly search for a few people"),
                        React.createElement("li", null, "Use the PeoplePicker to manage a group of people"),
                        React.createElement("li", null, "Use the MemberList PeoplePicker to display selections below the input box"),
                        React.createElement("li", null, "Use defaultSelectedItems when some people have already been selected"))), donts: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use the PeoplePicker to select something other than people"),
                        React.createElement("li", null, "Use the PeoplePicker to only display people"),
                        React.createElement("li", null, "Use the PeoplePicker without sufficient space"))) }));
        };
        return PeoplePickerPage;
    }(React.Component));
    exports.PeoplePickerPage = PeoplePickerPage;
});

//# sourceMappingURL=PeoplePickerPage.js.map
