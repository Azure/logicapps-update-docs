{"version":3,"sources":["components/pickers/PeoplePicker/examples/PeoplePicker.Types.Example.tsx"],"names":[],"mappings":"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","file":"components/pickers/PeoplePicker/examples/PeoplePicker.Types.Example.js","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport {\r\n  BaseComponent,\r\n  assign,\r\n  autobind\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport {\r\n  CompactPeoplePicker,\r\n  IBasePickerSuggestionsProps,\r\n  ListPeoplePicker,\r\n  NormalPeoplePicker\r\n} from 'office-ui-fabric-react/lib/Pickers';\r\nimport { IPersonaWithMenu } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.Props';\r\nimport { people } from './PeoplePickerExampleData';\r\nimport './PeoplePicker.Types.Example.scss';\r\nimport { Promise } from 'es6-promise';\r\n\r\nexport interface IPeoplePickerExampleState {\r\n  currentPicker?: number | string;\r\n  delayResults?: boolean;\r\n}\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n  suggestionsHeaderText: 'Suggested People',\r\n  noResultsFoundText: 'No results found',\r\n  loadingText: 'Loading'\r\n};\r\n\r\nexport class PeoplePickerTypesExample extends BaseComponent<any, IPeoplePickerExampleState> {\r\n  private _peopleList;\r\n  private contextualMenuItems: IContextualMenuItem[] = [\r\n    {\r\n      key: 'newItem',\r\n      icon: 'circlePlus',\r\n      name: 'New'\r\n    },\r\n    {\r\n      key: 'upload',\r\n      icon: 'upload',\r\n      name: 'Upload'\r\n    },\r\n    {\r\n      key: 'divider_1',\r\n      name: '-',\r\n    },\r\n    {\r\n      key: 'rename',\r\n      name: 'Rename'\r\n    },\r\n    {\r\n      key: 'properties',\r\n      name: 'Properties'\r\n    },\r\n    {\r\n      key: 'disabled',\r\n      name: 'Disabled item',\r\n      disabled: true\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n    this._peopleList = [];\r\n    people.forEach((persona: IPersonaProps) => {\r\n      let target: IPersonaWithMenu = {};\r\n\r\n      assign(target, persona, { menuItems: this.contextualMenuItems });\r\n      this._peopleList.push(target);\r\n    });\r\n\r\n    this.state = {\r\n      currentPicker: 1,\r\n      delayResults: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let currentPicker: JSX.Element;\r\n\r\n    switch (this.state.currentPicker) {\r\n      case 1:\r\n        currentPicker = this._renderNormalPicker();\r\n        break;\r\n      case 2:\r\n        currentPicker = this._renderCompactPicker();\r\n        break;\r\n      case 3:\r\n        currentPicker = this._renderListPicker();\r\n        break;\r\n      case 4:\r\n        currentPicker = this._renderPreselectedItemsPicker();\r\n        break;\r\n      case 5:\r\n        currentPicker = this._renderLimitedSearch();\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { currentPicker }\r\n        <div className={ 'dropdown-div' }>\r\n          <Dropdown label='Select People Picker Type'\r\n            options={ [\r\n              { key: 1, text: 'Normal' },\r\n              { key: 2, text: 'Compact' },\r\n              { key: 3, text: 'Members List' },\r\n              { key: 4, text: 'Preselected Items' },\r\n              { key: 5, text: 'Limit Search' }\r\n            ] }\r\n            selectedKey={ this.state.currentPicker }\r\n            onChanged={ this._dropDownSelected }\r\n          />\r\n          <Toggle\r\n            label='Delay Suggestion Results'\r\n            defaultChecked={ false }\r\n            onChanged={ this._toggleChange } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public _renderListPicker() {\r\n    return (\r\n      <ListPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        className={ 'ms-PeoplePicker' }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        key={ 'list' }\r\n      />\r\n    );\r\n  }\r\n\r\n  public _renderNormalPicker() {\r\n    return (\r\n      <NormalPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        className={ 'ms-PeoplePicker' }\r\n        key={ 'normal' }\r\n      />\r\n    );\r\n  }\r\n\r\n  public _renderCompactPicker() {\r\n    return (\r\n      <CompactPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        className={ 'ms-PeoplePicker' }\r\n      />\r\n    );\r\n  }\r\n\r\n  public _renderPreselectedItemsPicker() {\r\n    return (\r\n      <CompactPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        className={ 'ms-PeoplePicker' }\r\n        defaultSelectedItems={ people.splice(0, 3) }\r\n        key={ 'list' }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n      />\r\n    );\r\n  }\r\n\r\n  public _renderLimitedSearch() {\r\n    let limitedSearchSuggestionProps = suggestionProps;\r\n    limitedSearchSuggestionProps.searchForMoreText = 'Load all Results';\r\n    return (\r\n      <CompactPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChangedWithLimit }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        className={ 'ms-PeoplePicker' }\r\n        onGetMoreResults={ this._onFilterChanged }\r\n        pickerSuggestionsProps={ limitedSearchSuggestionProps }\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onFilterChanged(filterText: string, currentPersonas: IPersonaProps[], limitResults?: number) {\r\n    if (filterText) {\r\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\r\n\r\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\r\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\r\n      return this._filterPromise(filteredPersonas);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onFilterChangedWithLimit(filterText: string, currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\r\n    return this._onFilterChanged(filterText, currentPersonas, 3);\r\n  }\r\n\r\n  private _filterPromise(personasToReturn: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\r\n    if (this.state.delayResults) {\r\n      return this._convertResultsToPromise(personasToReturn);\r\n    } else {\r\n      return personasToReturn;\r\n    }\r\n  }\r\n\r\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) {\r\n      return false;\r\n    }\r\n    return personas.filter(item => item.primaryText === persona.primaryText).length > 0;\r\n  }\r\n\r\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\r\n    return this._peopleList.filter(item => this._doesTextStartWith(item.primaryText, filterText));\r\n  }\r\n\r\n  private _doesTextStartWith(text: string, filterText: string): boolean {\r\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\r\n  }\r\n\r\n  private _convertResultsToPromise(results: IPersonaProps[]): Promise<IPersonaProps[]> {\r\n    return new Promise<IPersonaProps[]>((resolve, reject) => setTimeout(() => resolve(results), 2000));\r\n  }\r\n\r\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]) {\r\n    return personas.filter(persona => !this._listContainsPersona(persona, possibleDupes));\r\n  }\r\n\r\n  @autobind\r\n  private _toggleChange(toggleState: boolean) {\r\n    this.setState({ delayResults: toggleState });\r\n  }\r\n\r\n  @autobind\r\n  private _dropDownSelected(option: IDropdownOption) {\r\n    this.setState({ currentPicker: option.key });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}