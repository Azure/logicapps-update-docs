{"version":3,"sources":["components/pickers/Suggestions/Suggestions.tsx"],"names":[],"mappings":"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","file":"components/pickers/Suggestions/Suggestions.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css\r\n} from '../../../Utilities';\r\nimport { CommandButton, IButton } from '../../../Button';\r\nimport { Spinner } from '../../../Spinner';\r\nimport { ISuggestionItemProps, ISuggestionsProps } from './Suggestions.Props';\r\nimport * as stylesImport from './Suggestions.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport class SuggestionsItem<T> extends BaseComponent<ISuggestionItemProps<T>, {}> {\r\n  public render() {\r\n    let {\r\n      suggestionModel,\r\n      RenderSuggestion,\r\n      onClick,\r\n      className\r\n    } = this.props;\r\n    return (\r\n      <CommandButton\r\n        onClick={ onClick }\r\n        className={ css(\r\n          'ms-Suggestions-item',\r\n          styles.suggestionsItem,\r\n          {\r\n            ['is-suggested ' + styles.suggestionsItemIsSuggested]: suggestionModel.selected\r\n          },\r\n          className\r\n        ) }\r\n      >\r\n        <RenderSuggestion { ...suggestionModel.item as any } />\r\n      </CommandButton>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Suggestions<T> extends BaseComponent<ISuggestionsProps<T>, {}> {\r\n\r\n  protected _searchForMoreButton: IButton;\r\n  protected _selectedElement: HTMLDivElement;\r\n  private SuggestionsItemOfProperType = SuggestionsItem as new (props: ISuggestionItemProps<T>) => SuggestionsItem<T>;\r\n\r\n  constructor(suggestionsProps: ISuggestionsProps<T>) {\r\n    super(suggestionsProps);\r\n    this._getMoreResults = this._getMoreResults.bind(this);\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    this.scrollSelected();\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      suggestionsHeaderText,\r\n      searchForMoreText,\r\n      className,\r\n      moreSuggestionsAvailable,\r\n      noResultsFoundText,\r\n      suggestions,\r\n      isLoading,\r\n      loadingText,\r\n      onRenderNoResultFound,\r\n    } = this.props;\r\n\r\n    let noResults: () => JSX.Element = () => {\r\n      return noResultsFoundText ?\r\n        <div className={ css('ms-Suggestions-none', styles.suggestionsNone) }>\r\n          { noResultsFoundText }\r\n        </div> : null;\r\n    };\r\n\r\n    return (\r\n      <div className={ css(\r\n        'ms-Suggestions',\r\n        className ? className : '',\r\n        styles.root) }>\r\n        { suggestionsHeaderText ?\r\n          (<div className={ css('ms-Suggestions-title', styles.suggestionsTitle) }>\r\n            { suggestionsHeaderText }\r\n          </div>) : (null) }\r\n        { isLoading && (\r\n          <Spinner\r\n            className={ css('ms-Suggestions-spinner', styles.suggestionsSpinner) }\r\n            label={ loadingText }\r\n          />) }\r\n        { (!suggestions || !suggestions.length) && !isLoading ?\r\n          (onRenderNoResultFound ? onRenderNoResultFound(null, noResults) : noResults()) :\r\n          this._renderSuggestions()\r\n        }\r\n        { searchForMoreText && moreSuggestionsAvailable && (\r\n          <CommandButton\r\n            componentRef={ this._resolveRef('_searchForMoreButton') }\r\n            className={ css('ms-SearchMore-button', styles.searchMoreButton) }\r\n            iconProps={ { iconName: 'Search' } }\r\n            onClick={ this._getMoreResults.bind(this) }\r\n          >\r\n            { searchForMoreText }\r\n          </CommandButton>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focusSearchForMoreButton() {\r\n    if (this._searchForMoreButton) {\r\n      this._searchForMoreButton.focus();\r\n    }\r\n  }\r\n\r\n  // TODO get the element to scroll into view properly regardless of direction.\r\n  public scrollSelected() {\r\n    if (this._selectedElement) {\r\n      this._selectedElement.scrollIntoView(false);\r\n    }\r\n  }\r\n\r\n  private _renderSuggestions(): JSX.Element {\r\n    let {\r\n      suggestions,\r\n      onRenderSuggestion,\r\n      suggestionsItemClassName } = this.props;\r\n    let TypedSuggestionsItem = this.SuggestionsItemOfProperType;\r\n\r\n    return (\r\n      <div\r\n        className={ css('ms-Suggestions-container', styles.suggestionsContainer) }\r\n        id='suggestion-list'\r\n        role='menu'>\r\n        { suggestions.map((suggestion, index) =>\r\n          <div ref={ this._resolveRef(suggestion.selected ? '_selectedElement' : '') }\r\n            key={ index }\r\n            id={ 'sug-' + index }\r\n            role='menuitem'>\r\n            <TypedSuggestionsItem\r\n              suggestionModel={ suggestion }\r\n              RenderSuggestion={ onRenderSuggestion }\r\n              onClick={ (ev: React.MouseEvent<HTMLElement>) => this.props.onSuggestionClick(ev, suggestion.item, index) }\r\n              className={ suggestionsItemClassName }\r\n            />\r\n          </div>) }\r\n      </div>);\r\n  }\r\n\r\n  private _getMoreResults() {\r\n    if (this.props.onGetMoreResults) {\r\n      this.props.onGetMoreResults();\r\n    }\r\n  }\r\n\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}