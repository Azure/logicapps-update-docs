{"version":3,"sources":["utilities/selection/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":"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","file":"utilities/selection/examples/Selection.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Check } from 'office-ui-fabric-react/lib/Check';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport {\r\n  IObjectWithKey,\r\n  ISelection,\r\n  Selection,\r\n  SelectionMode,\r\n  SelectionZone\r\n} from 'office-ui-fabric-react/lib/Selection';\r\nimport { createListItems } from '@uifabric/example-app-base';\r\n\r\nimport './Selection.Example.scss';\r\n\r\nconst ITEM_COUNT = 100;\r\n\r\nexport interface ISelectionBasicExampleState {\r\n  items?: any[];\r\n  selection?: ISelection;\r\n  selectionMode?: SelectionMode;\r\n  canSelect?: string;\r\n}\r\n\r\nexport interface ISelectionItemExampleProps {\r\n  item?: any;\r\n  itemIndex?: number;\r\n  selection?: ISelection;\r\n  selectionMode?: SelectionMode;\r\n}\r\n\r\n/**\r\n * The SelectionBasicExample controls the selection state of all items\r\n */\r\nexport class SelectionBasicExample extends React.Component<any, ISelectionBasicExampleState> {\r\n  private _hasMounted: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._hasMounted = false;\r\n    this._onSelectionChanged = this._onSelectionChanged.bind(this);\r\n    this._onSelectionModeChanged = this._onSelectionModeChanged.bind(this);\r\n    this._onToggleSelectAll = this._onToggleSelectAll.bind(this);\r\n    this._onCanSelectChanged = this._onCanSelectChanged.bind(this);\r\n    this._canSelectItem = this._canSelectItem.bind(this);\r\n\r\n    this.state = {\r\n      items: createListItems(ITEM_COUNT),\r\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\r\n      selectionMode: SelectionMode.multiple,\r\n      canSelect: 'all'\r\n    };\r\n    this.state.selection.setItems(this.state.items as IObjectWithKey[], false);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._hasMounted = true;\r\n  }\r\n\r\n  public render() {\r\n    let { items, selection, selectionMode } = this.state;\r\n\r\n    return (\r\n      <div className='ms-SelectionBasicExample'>\r\n        <CommandBar items={ this._getCommandItems() } />\r\n        <MarqueeSelection selection={ selection } isEnabled={ selectionMode === SelectionMode.multiple } >\r\n          <SelectionZone\r\n            selection={ selection }\r\n            selectionMode={ selectionMode }\r\n            onItemInvoked={ (item) => alert('item invoked: ' + item.name) }>\r\n            { items.map((item, index) => (\r\n              <SelectionItemExample\r\n                ref={ 'detailsGroup_' + index }\r\n                key={ item.key }\r\n                item={ item }\r\n                itemIndex={ index }\r\n                selectionMode={ selectionMode }\r\n                selection={ selection }\r\n              />\r\n            )) }\r\n          </SelectionZone>\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onSelectionChanged() {\r\n    if (this._hasMounted) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  private _onToggleSelectAll() {\r\n    let { selection } = this.state;\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  private _onSelectionModeChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\r\n    this.setState({\r\n      selectionMode: menuItem.data\r\n    });\r\n  }\r\n\r\n  private _onCanSelectChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\r\n    let canSelectItem = (menuItem.data === 'vowels') ? this._canSelectItem : undefined;\r\n    let newSelection = new Selection({ onSelectionChanged: this._onSelectionChanged, canSelectItem: canSelectItem });\r\n    newSelection.setItems(this.state.items as IObjectWithKey[], false);\r\n    this.setState({\r\n      selection: newSelection,\r\n      canSelect: (menuItem.data === 'vowels') ? 'vowels' : 'all'\r\n    });\r\n  }\r\n\r\n  private _canSelectItem(item: any): boolean {\r\n    return item.name && (item.name.indexOf('a') === 0 || item.name.indexOf('e') === 0 || item.name.indexOf('i') === 0 || item.name.indexOf('o') === 0 || item.name.indexOf('u') === 0);\r\n  }\r\n\r\n  private _getCommandItems(): IContextualMenuItem[] {\r\n    let { selectionMode, canSelect } = this.state;\r\n\r\n    return [\r\n      {\r\n        key: 'selectionMode',\r\n        name: 'Selection Mode',\r\n        items: [\r\n          {\r\n            key: SelectionMode[SelectionMode.none],\r\n            name: 'None',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.none,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.none\r\n\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.single],\r\n            name: 'Single select',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.single,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.single\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.multiple],\r\n            name: 'Multi select',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.multiple,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.multiple\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        key: 'selectAll',\r\n        name: 'Select All',\r\n        icon: 'check',\r\n        onClick: this._onToggleSelectAll\r\n      },\r\n      {\r\n        key: 'allowCanSelect',\r\n        name: 'Choose selectable items',\r\n        items: [\r\n          {\r\n            key: 'all',\r\n            name: 'All items',\r\n            canCheck: true,\r\n            checked: canSelect === 'all',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'all'\r\n          },\r\n          {\r\n            key: 'a',\r\n            name: 'Names starting with vowels',\r\n            canCheck: true,\r\n            checked: canSelect === 'vowels',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'vowels'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * The SelectionItemExample controls and displays the selection state of a single item\r\n */\r\nexport class SelectionItemExample extends React.Component<ISelectionItemExampleProps, {}> {\r\n  public render() {\r\n    let { item, itemIndex, selection, selectionMode } = this.props;\r\n    let isSelected = selection.isIndexSelected(itemIndex);\r\n\r\n    return (\r\n      <div className='ms-SelectionItemExample' data-selection-index={ itemIndex }>\r\n        { (selectionMode !== SelectionMode.none) && (\r\n          <div className='ms-SelectionItemExample-check' data-selection-toggle={ true } >\r\n            <Check checked={ isSelected } />\r\n          </div>\r\n        ) }\r\n        <span className='ms-SelectionItemExample-name'>\r\n          { item.name }\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}